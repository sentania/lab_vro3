<?xml version='1.0' encoding='UTF-8'?>
<workflow xmlns="http://vmware.com/vco/workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd" root-name="item5" object-name="workflow:name=generic" id="9bbb1d58-85e6-4620-982f-128693dfd40b" version="1.0.3" api-version="6.0.0" allowed-operations="evf" restartMode="1" resumeFromFailedMode="0">
  <display-name><![CDATA[Make a REST call (with logging and validation)]]></display-name>
  <description><![CDATA[Makes a quick call to a REST host, without the need to have a REST Operation defined.

Adds debug logging and success validation to VMware's "Invoke a REST host" workflow.  
Keeps the same Output type as that workflow, to make it easier to swap-out that workflow with this one.
Logging the Request URL, Request Content, and Results are all optional, in case they contain a password or secret key.]]></description>
  <ref-types><![CDATA[(REST:RESTHost)]]></ref-types>
  <position y="18.136363636363633" x="85.0"/>
  <input>
    <param name="restHost" type="REST:RESTHost">
      <description><![CDATA[The host that should take the request.]]></description>
    </param>
    <param name="requestType" type="string">
      <description><![CDATA[The type of the request (GET, SET, POST, etc).]]></description>
    </param>
    <param name="requestUrl" type="string">
      <description><![CDATA[The URL that should be appended to the host base URL in order to make the request.]]></description>
    </param>
    <param name="requestContent" type="string">
      <description><![CDATA[Optional. Content that is submitted as part of the request.]]></description>
    </param>
    <param name="requestContentType" type="string">
      <description><![CDATA[Optional. If requestContent is specified, then specify its Type (ex: text/html).]]></description>
    </param>
    <param name="requestOtherSuccessCode" type="number">
      <description><![CDATA[Optional. If provided, the workflow will interpret this code as success. Otherwise 200-208,226 are the only success codes.]]></description>
    </param>
    <param name="requestSuccessText" type="string">
      <description><![CDATA[Optional. If provided, the workflow will make sure this text appears in the Results.]]></description>
    </param>
    <param name="logUrl" type="boolean">
      <description><![CDATA[Optional debug logging. Use null/false if there is a password or secret key in the URL.]]></description>
    </param>
    <param name="logContent" type="boolean">
      <description><![CDATA[Optional debug logging. Use null/false if there is a password or secret key in the Content.]]></description>
    </param>
    <param name="logResults" type="boolean">
      <description><![CDATA[Optional debug logging. Use null/false if there is a password or secret key in the Results.]]></description>
    </param>
  </input>
  <output>
    <param name="requestResponse" type="Properties">
      <description><![CDATA[Properties object with the results of the REST request.]]></description>
    </param>
  </output>
  <attrib name="statusCode" type="number" read-only="false">
    <value encoded="n"><![CDATA[__NULL__]]></value>
    <description><![CDATA[The status code returned by the request.]]></description>
  </attrib>
  <attrib name="contentLength" type="number" read-only="false">
    <value encoded="n"><![CDATA[__NULL__]]></value>
    <description><![CDATA[The length of the content returned by the request.]]></description>
  </attrib>
  <attrib name="headers" type="Properties" read-only="false">
    <value encoded="n"><![CDATA[__NULL__]]></value>
    <description><![CDATA[The HTTP response headers from the request.]]></description>
  </attrib>
  <attrib name="contentAsString" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
    <description><![CDATA[The content returned by the request.]]></description>
  </attrib>
  <attrib name="logInfo" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
    <description><![CDATA[Summary of the request results - used in log and error messages.]]></description>
  </attrib>
  <attrib name="errorMessage" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
    <description><![CDATA[Exception binding variable.]]></description>
  </attrib>
  <workflow-item name="item0" out-name="item8" type="task">
    <display-name><![CDATA[Make REST call]]></display-name>
    <script encoded="false"><![CDATA[if (restHost === null) { throw "Required paramater, restHost, is null"; }

try {
	//Create the Request
	var request = restHost.createRequest(requestType, requestUrl, requestContent);
	request.ContentType = requestContentType;
	//Execute the Request
	var response = request.execute();
}
catch (err) {
	//Check for a common vRO error when a malformed URL is encountered
	if (err.message.indexOf("Illegal character in query at index") !== -1) {
		err.message += "\nNote: This could be caused by a malformed URL. Try using the encodeURI() function.";
	}
	throw err; //re-throw the error
}

//Save the results to use for validation and logging later on in the workflow
if (response === null) { throw "REST operation returned a null 'response'"; }
statusCode = response.statusCode;
contentLength = response.contentLength;
headers = response.getAllHeaders();
contentAsString = response.contentAsString;

//Save the results as a workflow output object
requestResponse = new Properties();
requestResponse.put("statusCode", statusCode);
requestResponse.put("contentLength", contentLength);
requestResponse.put("headers", headers);
requestResponse.put("contentAsString", contentAsString);

]]></script>
    <in-binding>
      <bind name="restHost" type="REST:RESTHost" export-name="restHost"/>
      <bind name="requestType" type="string" export-name="requestType"/>
      <bind name="requestUrl" type="string" export-name="requestUrl"/>
      <bind name="requestContent" type="string" export-name="requestContent"/>
      <bind name="requestContentType" type="string" export-name="requestContentType"/>
    </in-binding>
    <out-binding>
      <bind name="requestResponse" type="Properties" export-name="requestResponse"/>
      <bind name="statusCode" type="number" export-name="statusCode"/>
      <bind name="contentLength" type="number" export-name="contentLength"/>
      <bind name="headers" type="Properties" export-name="headers"/>
      <bind name="contentAsString" type="string" export-name="contentAsString"/>
    </out-binding>
    <description><![CDATA[Contacts the REST host, and makes the specified REST request.]]></description>
    <position y="28.136363636363633" x="324.5"/>
  </workflow-item>
  <workflow-item name="item1" type="end" end-mode="0">
    <position y="18.136363636363633" x="1064.5"/>
  </workflow-item>
  <workflow-item name="item2" out-name="item7" catch-name="item4" throw-bind-name="errorMessage" type="task">
    <display-name><![CDATA[Check Success Txt]]></display-name>
    <script encoded="false"><![CDATA[//If the optional input, requestSuccessText, was provided...
if (requestSuccessText) {
	//...Then look for the success indicator within the response text
	if (contentAsString.indexOf(requestSuccessText) !== -1) {
		System.debug("REST response contained the expected success substring: '" + requestSuccessText + "'");
	} else { 
		//If unsuccessful, log details to the Error message
		throw "REST response did not contain the expected success substring: '" + requestSuccessText + "'";
	}
}
]]></script>
    <in-binding>
      <bind name="requestSuccessText" type="string" export-name="requestSuccessText"/>
      <bind name="contentAsString" type="string" export-name="contentAsString"/>
    </in-binding>
    <out-binding/>
    <description><![CDATA[If the optional input was provided (requestSuccessText), then make sure that string appears in the results of the request.]]></description>
    <position y="28.136363636363633" x="744.5"/>
  </workflow-item>
  <workflow-item name="item3" out-name="item2" catch-name="item4" throw-bind-name="errorMessage" type="task">
    <display-name><![CDATA[Check Exit Code]]></display-name>
    <script encoded="false"><![CDATA[//Standard REST success codes
if ( (statusCode >= 200 && statusCode <= 208) || statusCode === 226) {
	System.log("REST call returned a successful result code: " + statusCode);
}
//Optional Input success code
else if (statusCode === requestOtherSuccessCode) {
	System.log("REST call matches the specified success code: " + statusCode);
}
else {
	throw "REST call returned a non-successful result code: " + statusCode;
}
]]></script>
    <in-binding>
      <bind name="requestOtherSuccessCode" type="number" export-name="requestOtherSuccessCode">
        <description><![CDATA[Optional. If provided, the workflow will interpret this code as success. Otherwise 200-208,226 are the only success codes.]]></description>
      </bind>
      <bind name="statusCode" type="number" export-name="statusCode"/>
    </in-binding>
    <out-binding/>
    <description><![CDATA[Makes sure the request returned a "success" exit code.]]></description>
    <position y="28.136363636363633" x="604.5"/>
  </workflow-item>
  <workflow-item name="item5" out-name="item0" type="task">
    <display-name><![CDATA[Log the request]]></display-name>
    <script encoded="false"><![CDATA[System.log("Making REST Call. Host: " + restHost + ", Request Type: " + requestType);

//Optional Logging depends on Input flags
if (logUrl) {
	System.debug("REST request URL: '" + requestUrl + "'");
}
if (logContent) {
	System.debug("REST request Content: '" + requestContent + "'");
}]]></script>
    <in-binding>
      <bind name="logUrl" type="boolean" export-name="logUrl">
        <description><![CDATA[Optional in case there is a password or secret key in the URL.]]></description>
      </bind>
      <bind name="requestUrl" type="string" export-name="requestUrl">
        <description><![CDATA[The URL that should be appended to the host base URL in order to make the request]]></description>
      </bind>
      <bind name="logContent" type="boolean" export-name="logContent">
        <description><![CDATA[Optional in case there is a password or secret key in the Content.]]></description>
      </bind>
      <bind name="requestContent" type="string" export-name="requestContent">
        <description><![CDATA[The request content]]></description>
      </bind>
      <bind name="restHost" type="REST:RESTHost" export-name="restHost">
        <description><![CDATA[The host that should take the request]]></description>
      </bind>
      <bind name="requestType" type="string" export-name="requestType">
        <description><![CDATA[The type of the request]]></description>
      </bind>
    </in-binding>
    <out-binding/>
    <description><![CDATA[Logs the request information: Host, Type (GET, etc), and optionally the URL and Content if their input flags were specified.]]></description>
    <position y="28.136363636363633" x="185.0"/>
  </workflow-item>
  <workflow-item name="item4" out-name="item6" type="task">
    <display-name><![CDATA[Log Error]]></display-name>
    <script encoded="false"><![CDATA[errorMessage = errorMessage + "\n" + logInfo;
System.error(errorMessage);]]></script>
    <in-binding>
      <bind name="logInfo" type="string" export-name="logInfo"/>
      <bind name="errorMessage" type="string" export-name="errorMessage"/>
    </in-binding>
    <out-binding>
      <bind name="errorMessage" type="string" export-name="errorMessage"/>
    </out-binding>
    <position y="91.77272727272727" x="664.5"/>
  </workflow-item>
  <workflow-item name="item6" throw-bind-name="errorMessage" type="end" end-mode="1">
    <position y="145.4090909090909" x="704.5"/>
  </workflow-item>
  <workflow-item name="item7" out-name="item1" type="task">
    <display-name><![CDATA[Log Results]]></display-name>
    <script encoded="false"><![CDATA[System.debug(logInfo);]]></script>
    <in-binding>
      <bind name="logInfo" type="string" export-name="logInfo"/>
    </in-binding>
    <out-binding/>
    <position y="28.136363636363633" x="884.5"/>
  </workflow-item>
  <workflow-item name="item8" out-name="item3" type="task">
    <display-name><![CDATA[Save Log Info]]></display-name>
    <script encoded="false"><![CDATA[//Build string to log result info

//Add exit code
logInfo = "REST response exit code: '" + statusCode + "'\n";

//Add headers
logInfo += "REST response headers: \n" + propsToString(headers);

//Add Response text - Optional (depends on an Input flag)
if (logResults) {
	logInfo += "REST response text: '" + contentAsString + "'\n"
}


function propsToString(props){
//Save the contents of a Properties() object to a formatted string
	var contents = "";
	for each (var key in props.keys) {
		contents += ("\t" + key + ": " + props.get(key) + "\n");	
	}
	return contents;
}]]></script>
    <in-binding>
      <bind name="statusCode" type="number" export-name="statusCode"/>
      <bind name="contentLength" type="number" export-name="contentLength"/>
      <bind name="headers" type="Properties" export-name="headers"/>
      <bind name="contentAsString" type="string" export-name="contentAsString"/>
      <bind name="logResults" type="boolean" export-name="logResults">
        <description><![CDATA[Optional debug logging. Use null/false if there is a password or secret key in the Results.]]></description>
      </bind>
    </in-binding>
    <out-binding>
      <bind name="logInfo" type="string" export-name="logInfo"/>
    </out-binding>
    <description><![CDATA[Creates a string that summarizes the results of the request.  The string will be used in log and error messages.]]></description>
    <position y="28.136363636363633" x="464.5"/>
  </workflow-item>
  <presentation>
    <p-group>
      <title><![CDATA[Request properties]]></title>
      <p-param name="restHost">
        <desc><![CDATA[The host that should take the request]]></desc>
        <p-qual kind="static" name="mandatory" type="boolean"><![CDATA[true]]></p-qual>
        <p-qual name="contextualParameter" type="void"><![CDATA[]]></p-qual>
      </p-param>
      <p-param name="requestUrl">
        <desc><![CDATA[The URL that should be appended to the host base URL in order to make the request]]></desc>
        <p-qual kind="static" name="mandatory" type="boolean"><![CDATA[true]]></p-qual>
      </p-param>
      <p-param name="requestType">
        <desc><![CDATA[The type of the request]]></desc>
        <p-qual kind="static" name="mandatory" type="boolean"><![CDATA[true]]></p-qual>
        <p-qual kind="static" name="defaultValue" type="string"><![CDATA[GET]]></p-qual>
        <p-qual kind="static" name="genericEnumeration" type="Array/string"><![CDATA[#{#string#GET#;#string#POST#;#string#PUT#;#string#DELETE#;#string#OPTIONS#;#string#HEAD#;#string#PATCH#;#string#TRACE#}#]]></p-qual>
      </p-param>
      <p-param name="requestContent">
        <desc><![CDATA[The request content]]></desc>
        <p-qual kind="static" name="mandatory" type="boolean"><![CDATA[true]]></p-qual>
        <p-qual kind="ognl" name="visible" type="boolean"><![CDATA[(#requestType=="POST"||#requestType=="PUT"||#requestType=="PATCH"||#requestType=="DELETE")]]></p-qual>
        <p-qual kind="static" name="defaultValue" type="string"><![CDATA[__NULL__]]></p-qual>
        <p-qual name="textInput" type="void"><![CDATA[]]></p-qual>
      </p-param>
      <p-param name="requestContentType">
        <desc><![CDATA[The request content type]]></desc>
        <p-qual kind="static" name="mandatory" type="boolean"><![CDATA[true]]></p-qual>
        <p-qual kind="ognl" name="visible" type="boolean"><![CDATA[(#requestType=="POST"||#requestType=="PUT"||#requestType=="PATCH"||#requestType=="DELETE")]]></p-qual>
        <p-qual kind="static" name="defaultValue" type="string"><![CDATA[__NULL__]]></p-qual>
      </p-param>
    </p-group>
    <p-param name="requestOtherSuccessCode">
      <desc><![CDATA[Optional. If provided, the workflow will interpret this code as success. Otherwise 200-208,226 are the only success codes.]]></desc>
    </p-param>
    <p-param name="requestSuccessText">
      <desc><![CDATA[Optional. If provided, the workflow will make sure this text appears in the Results.]]></desc>
    </p-param>
    <p-param name="logUrl">
      <desc><![CDATA[Log the URL?  Optional debug logging. Use null/false if there is a password or secret key in the URL.]]></desc>
    </p-param>
    <p-param name="logContent">
      <desc><![CDATA[Log the content included in the request? Optional debug logging. Use null/false if there is a password or secret key in the Content.]]></desc>
    </p-param>
    <p-param name="logResults">
      <desc><![CDATA[Log the request results? Optional debug logging. Use null/false if there is a password or secret key in the Results.]]></desc>
    </p-param>
  </presentation>
</workflow>