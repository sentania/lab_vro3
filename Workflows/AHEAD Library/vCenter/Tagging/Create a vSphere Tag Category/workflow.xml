<?xml version='1.0' encoding='UTF-8'?>
<workflow xmlns="http://vmware.com/vco/workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd" root-name="item2" object-name="workflow:name=generic" id="b0dff549-a396-42a0-b0f9-fb085ceb529f" version="1.1.0" api-version="6.0.0" allowed-operations="evf" restartMode="1" resumeFromFailedMode="0">
  <display-name><![CDATA[Create a vSphere Tag Category]]></display-name>
  <description><![CDATA[Updated version of "Create tag category" from the VAPI plug-in.  This version validates inputs and returns the ID of the new tag category.

If entityTypes is null, the new Category will apply to All entitiy types.  To figure out the entity type of an object, go to the Inventory tab 
in vRO, and browse to your object in the vCenter plug-in.  Once an object is selected, its Type will be noted in the top-right corner
 of the vRO window.]]></description>
  <position y="50.0" x="100.0"/>
  <input>
    <param name="vapiEndpoint" type="VAPI:VAPIEndpoint">
      <description><![CDATA[The vAPI Endpoint to connect to]]></description>
    </param>
    <param name="categoryName" type="string">
      <description><![CDATA[Name of the category to be created]]></description>
    </param>
    <param name="description" type="string">
      <description><![CDATA[Optional. Description for the Tag Category]]></description>
    </param>
    <param name="entityTypes" type="Array/string">
      <description><![CDATA[Null = all types. Known allowable types: ClusterComputeResource, Datacenter, Datastore, StoragePod, DistributedVirtualPortgroup, VmwareDistributedVirtualSwitch, Folder, ResourcePool, Network, VirtualMachine, HostSystem]]></description>
    </param>
    <param name="multipleCardinality" type="boolean">
      <description><![CDATA[true = multiple, false = single (default)]]></description>
    </param>
  </input>
  <output>
    <param name="categoryId" type="string"/>
  </output>
  <attrib name="errorCode" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="http503ErrorRetries" type="number" read-only="true" conf-id="fbf0c5eb-681b-4820-bdd5-e8ce7b07e9fa" conf-key="http503ErrorRetries">
    <value encoded="n"><![CDATA[1.0]]></value>
    <description><![CDATA[How many times to retry if VAPI encounters a 503 error (vCenter too busy)]]></description>
  </attrib>
  <attrib name="http503ErrorRetryWaitMinSeconds" type="number" read-only="true" conf-id="fbf0c5eb-681b-4820-bdd5-e8ce7b07e9fa" conf-key="http503ErrorRetryWaitMinSeconds">
    <value encoded="n"><![CDATA[60.0]]></value>
    <description><![CDATA[For each retry, wait a random number of seconds between the min and max]]></description>
  </attrib>
  <attrib name="http503ErrorRetryWaitMaxSeconds" type="number" read-only="true" conf-id="fbf0c5eb-681b-4820-bdd5-e8ce7b07e9fa" conf-key="http503ErrorRetryWaitMaxSeconds">
    <value encoded="n"><![CDATA[120.0]]></value>
    <description><![CDATA[For each retry, wait a random number of seconds between the min and max]]></description>
  </attrib>
  <attrib name="retryCount" type="number" read-only="false">
    <value encoded="n"><![CDATA[0.0]]></value>
  </attrib>
  <workflow-item name="item0" type="end" end-mode="0">
    <position y="45.40909090909091" x="524.5"/>
  </workflow-item>
  <workflow-item name="item1" out-name="item0" catch-name="item4" throw-bind-name="errorCode" type="task">
    <display-name><![CDATA[Create Category]]></display-name>
    <script encoded="false"><![CDATA[System.log("Creating Tag Category '" + categoryName + "'...");
var client = vapiEndpoint.client();
var tagging = new com_vmware_cis_tagging_category(client);
var spec = new com_vmware_cis_tagging_category_create__spec();

spec.name = categoryName;
if (!description) description = "";  //Description can be empty, but not null
spec.description = description;
if (multipleCardinality) {
	spec.cardinality = "MULTIPLE";
} else {
	spec.cardinality = "SINGLE";
}
spec.associable_types = entityTypes;

//Execute and Save Output
categoryId = tagging.create(spec);
System.log("Successfully created Tag Category with ID '" + categoryId + "'");

]]></script>
    <in-binding>
      <bind name="vapiEndpoint" type="VAPI:VAPIEndpoint" export-name="vapiEndpoint">
        <description><![CDATA[The vAPI Endpoint to connect to]]></description>
      </bind>
      <bind name="categoryName" type="string" export-name="categoryName">
        <description><![CDATA[Name of the category to be created]]></description>
      </bind>
      <bind name="description" type="string" export-name="description">
        <description><![CDATA[Description for the Tag Category]]></description>
      </bind>
      <bind name="entityTypes" type="Array/string" export-name="entityTypes">
        <description><![CDATA[Allowable values: Cluster, Datacenter, Datastore, DatastoreCluster, DistributedPortGroup, DistributedSwitch, Folder, ResourcePool, VApp, VirtualPortGroup, VirtualMachine, VM, VMHost]]></description>
      </bind>
      <bind name="multipleCardinality" type="boolean" export-name="multipleCardinality">
        <description><![CDATA[False = Single, True = Multiple]]></description>
      </bind>
    </in-binding>
    <out-binding>
      <bind name="categoryId" type="string" export-name="categoryId"/>
    </out-binding>
    <position y="55.40909090909091" x="344.5"/>
  </workflow-item>
  <workflow-item name="item2" out-name="item1" type="task">
    <display-name><![CDATA[Validate Inputs]]></display-name>
    <script encoded="false"><![CDATA[if (!vapiEndpoint) {
  throw "'vapiEndpoint' parameter should not be null";
}
if (!categoryName) {
  throw "'categoryName' parameter should not be null or empty";
}

//entityTypes CAN be null (indicates all types are OK), or...
//entityTypes can be an array of values (only specific values are allowed)
//I determined this list by browsing objects in the vRO Intentory tab, and looking
//  at the Type of each object in the top-right corner of the vRO window.
if (entityTypes !== null) {
	if (!Array.isArray(entityTypes) || entityTypes.length < 1) {
		throw "'entityTypes' parameter must either be null, or an array of strings: " + entityTypes;
	}
	//All known values for entityTypes input array (case sensitive)
	var allowedEntities = [
		"ClusterComputeResource", "Datacenter", "Datastore", "StoragePod", 
		"DistributedVirtualPortgroup", "VmwareDistributedVirtualSwitch", "Folder", 
		"ResourcePool", "Network", "VirtualMachine", "HostSystem"
		];
	//Check each entry in entityTypes...
	for (var i = 0; i < entityTypes.length; i++){
		var typeOk = false;
		//Check it against each of the allowed values
		for (var j = 0; j < allowedEntities.length; j++) {
			if (entityTypes[i] == allowedEntities[j]) {
				typeOk = true;
				break;
			}
		}
		//Entry didn't match an allowed type
		if (!typeOk) {
			System.warn("entityTypes input contained a value that might be invalid: '" + entityTypes[i] + "'");
		}
	}
}
]]></script>
    <in-binding>
      <bind name="vapiEndpoint" type="VAPI:VAPIEndpoint" export-name="vapiEndpoint">
        <description><![CDATA[The vAPI Endpoint to connect to]]></description>
      </bind>
      <bind name="categoryName" type="string" export-name="categoryName">
        <description><![CDATA[Name of the category to be created]]></description>
      </bind>
      <bind name="entityTypes" type="Array/string" export-name="entityTypes">
        <description><![CDATA[Allowable values: Cluster, Datacenter, Datastore, DatastoreCluster, DistributedPortGroup, DistributedSwitch, Folder, ResourcePool, VApp, VirtualPortGroup, VirtualMachine, VM, VMHost]]></description>
      </bind>
    </in-binding>
    <out-binding/>
    <position y="55.40909090909091" x="204.5"/>
  </workflow-item>
  <workflow-item name="item3" out-name="item1" type="task">
    <display-name><![CDATA[Retry loop control]]></display-name>
    <script encoded="false"><![CDATA[//Throw error to exit loop if max retries has been reached
if (retryCount >= http503ErrorRetries) {
	var message = "VAPI returned an error '" + errorCode + "'. This appears to be an HTTP 503 error, so " + retryCount 
				+ " retries were attempted. You can edit the 'vCenter Tagging' configuration element to change the "
				+ "number or retries for 503 errors.";
	throw message;
}

//Increment the loop counter
retryCount++;

//Sleep for a random number of seconds between the min and max
var randRange = http503ErrorRetryWaitMaxSeconds - http503ErrorRetryWaitMinSeconds;  //random number will be between 1 and this number
var randNumber = Math.floor((Math.random() * randRange) + 1);
var sleepSecs = http503ErrorRetryWaitMinSeconds + randNumber;
System.warn("HTTP 503 error encountered (vCenter is busy). Retrying in " + sleepSecs + " seconds.");
var sleepMs = sleepSecs * 1000;  //sleep time in milliseconds
System.sleep(sleepMs);]]></script>
    <in-binding>
      <bind name="errorCode" type="string" export-name="errorCode"/>
      <bind name="http503ErrorRetries" type="number" export-name="http503ErrorRetries">
        <description><![CDATA[How many times to retry if VAPI encounters a 503 error (vCenter too busy)]]></description>
      </bind>
      <bind name="http503ErrorRetryWaitMinSeconds" type="number" export-name="http503ErrorRetryWaitMinSeconds">
        <description><![CDATA[For each retry, wait a random number of seconds between the min and max]]></description>
      </bind>
      <bind name="http503ErrorRetryWaitMaxSeconds" type="number" export-name="http503ErrorRetryWaitMaxSeconds">
        <description><![CDATA[For each retry, wait a random number of seconds between the min and max]]></description>
      </bind>
      <bind name="retryCount" type="number" export-name="retryCount"/>
    </in-binding>
    <out-binding>
      <bind name="retryCount" type="number" export-name="retryCount"/>
    </out-binding>
    <position y="128.13636363636363" x="205.0"/>
  </workflow-item>
  <workflow-item name="item4" out-name="item3" type="custom-condition" alt-out-name="item5">
    <display-name><![CDATA[HTTP 503 Error?]]></display-name>
    <script encoded="false"><![CDATA[//Look for "503" within the error message.  I was going to look for the exact phrase that 
// VAPI uses for 503 errors, but I thought that might change between VAPI versions.

if (errorCode.indexOf("503") !== -1) return true;
else return false;]]></script>
    <in-binding>
      <bind name="errorCode" type="string" export-name="errorCode"/>
    </in-binding>
    <position y="118.13636363636363" x="345.0"/>
  </workflow-item>
  <workflow-item name="item5" throw-bind-name="errorCode" type="end" end-mode="1">
    <position y="118.13636363636363" x="524.5"/>
  </workflow-item>
  <presentation>
    <p-param name="categoryName">
      <desc><![CDATA[Name of the Tag Category to be created]]></desc>
    </p-param>
    <p-param name="vapiEndpoint">
      <desc><![CDATA[The vAPI Endpoint to connect to]]></desc>
    </p-param>
    <p-param name="description">
      <desc><![CDATA[Optional. Description for the Tag Category]]></desc>
    </p-param>
    <p-param name="entityTypes">
      <desc><![CDATA[Null = all types. Known allowable types: ClusterComputeResource, Datacenter, Datastore, StoragePod, DistributedVirtualPortgroup, VmwareDistributedVirtualSwitch, Folder, ResourcePool, Network, VirtualMachine, HostSystem]]></desc>
    </p-param>
    <p-param name="multipleCardinality">
      <desc><![CDATA[true = multiple, false = single (default)]]></desc>
    </p-param>
  </presentation>
</workflow>