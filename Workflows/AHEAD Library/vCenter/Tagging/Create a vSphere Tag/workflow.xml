<?xml version='1.0' encoding='UTF-8'?>
<workflow xmlns="http://vmware.com/vco/workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd" root-name="item2" object-name="workflow:name=generic" id="65539eeb-f230-4393-a490-e44e952a213c" version="1.1.0" api-version="6.0.0" allowed-operations="evf" restartMode="1" resumeFromFailedMode="0">
  <display-name><![CDATA[Create a vSphere Tag]]></display-name>
  <description><![CDATA[Updated version of the VAPI plug-in' s "Create tag" workflow.  This version outputs the tag ID of the new tag.]]></description>
  <ref-types><![CDATA[(VAPI:VAPIEndpoint)]]></ref-types>
  <position y="50.0" x="100.0"/>
  <input>
    <param name="vapiEndpoint" type="VAPI:VAPIEndpoint">
      <description><![CDATA[The vAPI Endpoint to connect to]]></description>
    </param>
    <param name="categoryId" type="string">
      <description><![CDATA[ID of the tag category to which the new tag will belong]]></description>
    </param>
    <param name="description" type="string">
      <description><![CDATA[Optional. Description for the new tag]]></description>
    </param>
    <param name="tagName" type="string">
      <description><![CDATA[Name for the new tag]]></description>
    </param>
  </input>
  <output>
    <param name="tagId" type="string">
      <description><![CDATA[The ID of the newly created tag]]></description>
    </param>
  </output>
  <attrib name="errorCode" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="http503ErrorRetries" type="number" read-only="true" conf-id="fbf0c5eb-681b-4820-bdd5-e8ce7b07e9fa" conf-key="http503ErrorRetries">
    <value encoded="n"><![CDATA[1.0]]></value>
    <description><![CDATA[How many times to retry if VAPI encounters a 503 error (vCenter too busy)]]></description>
  </attrib>
  <attrib name="http503ErrorRetryWaitMinSeconds" type="number" read-only="true" conf-id="fbf0c5eb-681b-4820-bdd5-e8ce7b07e9fa" conf-key="http503ErrorRetryWaitMinSeconds">
    <value encoded="n"><![CDATA[60.0]]></value>
    <description><![CDATA[For each retry, wait a random number of seconds between the min and max]]></description>
  </attrib>
  <attrib name="http503ErrorRetryWaitMaxSeconds" type="number" read-only="true" conf-id="fbf0c5eb-681b-4820-bdd5-e8ce7b07e9fa" conf-key="http503ErrorRetryWaitMaxSeconds">
    <value encoded="n"><![CDATA[120.0]]></value>
    <description><![CDATA[For each retry, wait a random number of seconds between the min and max]]></description>
  </attrib>
  <attrib name="retryCount" type="number" read-only="false">
    <value encoded="n"><![CDATA[0.0]]></value>
  </attrib>
  <workflow-item name="item0" type="end" end-mode="0">
    <position y="45.40909090909091" x="524.5"/>
  </workflow-item>
  <workflow-item name="item1" out-name="item0" catch-name="item4" throw-bind-name="errorCode" type="task">
    <display-name><![CDATA[Create Tag]]></display-name>
    <script encoded="false"><![CDATA[System.log("Creating tag '" + tagName + "'...");
var client = vapiEndpoint.client();
var tagsvc = new com_vmware_cis_tagging_tag(client);
var spec = new com_vmware_cis_tagging_tag_create__spec();

spec.category_id = categoryId;
if (!description) description = "";  //Description can be empty, but not null
spec.description = description;
spec.name = tagName;

//Execute and Save Output
tagId = tagsvc.create(spec);
System.log("Successfully created tag with ID '" + tagId + "'");
]]></script>
    <in-binding>
      <bind name="vapiEndpoint" type="VAPI:VAPIEndpoint" export-name="vapiEndpoint"/>
      <bind name="description" type="string" export-name="description"/>
      <bind name="tagName" type="string" export-name="tagName"/>
      <bind name="categoryId" type="string" export-name="categoryId"/>
    </in-binding>
    <out-binding>
      <bind name="tagId" type="string" export-name="tagId"/>
    </out-binding>
    <position y="55.40909090909091" x="344.5"/>
  </workflow-item>
  <workflow-item name="item2" out-name="item1" type="task">
    <display-name><![CDATA[Validate Inputs]]></display-name>
    <script encoded="false"><![CDATA[if (vapiEndpoint == null) {
  throw "'vapiEndpoint' parameter should not be null";
}
if (categoryId == null) {
  throw "'categoryId' parameter should not be null";
}
if (tagName == null) {
  throw "'tagName' parameter should not be null";
}]]></script>
    <in-binding>
      <bind name="vapiEndpoint" type="VAPI:VAPIEndpoint" export-name="vapiEndpoint">
        <description><![CDATA[The vAPI Endpoint to connect to]]></description>
      </bind>
      <bind name="categoryId" type="string" export-name="categoryId">
        <description><![CDATA[ID of the tag category to which the new tag will belong]]></description>
      </bind>
      <bind name="tagName" type="string" export-name="tagName">
        <description><![CDATA[Name for the new tag]]></description>
      </bind>
    </in-binding>
    <out-binding/>
    <position y="55.40909090909091" x="204.5"/>
  </workflow-item>
  <workflow-item name="item3" out-name="item1" type="task">
    <display-name><![CDATA[Retry loop control]]></display-name>
    <script encoded="false"><![CDATA[//Throw error to exit loop if max retries has been reached
if (retryCount >= http503ErrorRetries) {
	var message = "VAPI returned an error '" + errorCode + "'. This appears to be an HTTP 503 error, so " + retryCount 
				+ " retries were attempted. You can edit the 'vCenter Tagging' configuration element to change the "
				+ "number or retries for 503 errors.";
	throw message;
}

//Increment the loop counter
retryCount++;

//Sleep for a random number of seconds between the min and max
var randRange = http503ErrorRetryWaitMaxSeconds - http503ErrorRetryWaitMinSeconds;  //random number will be between 1 and this number
var randNumber = Math.floor((Math.random() * randRange) + 1);
var sleepSecs = http503ErrorRetryWaitMinSeconds + randNumber;
System.warn("HTTP 503 error encountered (vCenter is busy). Retrying in " + sleepSecs + " seconds.");
var sleepMs = sleepSecs * 1000;  //sleep time in milliseconds
System.sleep(sleepMs);]]></script>
    <in-binding>
      <bind name="errorCode" type="string" export-name="errorCode"/>
      <bind name="http503ErrorRetries" type="number" export-name="http503ErrorRetries">
        <description><![CDATA[How many times to retry if VAPI encounters a 503 error (vCenter too busy)]]></description>
      </bind>
      <bind name="http503ErrorRetryWaitMinSeconds" type="number" export-name="http503ErrorRetryWaitMinSeconds">
        <description><![CDATA[For each retry, wait a random number of seconds between the min and max]]></description>
      </bind>
      <bind name="http503ErrorRetryWaitMaxSeconds" type="number" export-name="http503ErrorRetryWaitMaxSeconds">
        <description><![CDATA[For each retry, wait a random number of seconds between the min and max]]></description>
      </bind>
      <bind name="retryCount" type="number" export-name="retryCount"/>
    </in-binding>
    <out-binding>
      <bind name="retryCount" type="number" export-name="retryCount"/>
    </out-binding>
    <position y="119.04545454545453" x="205.0"/>
  </workflow-item>
  <workflow-item name="item4" out-name="item3" type="custom-condition" alt-out-name="item5">
    <display-name><![CDATA[HTTP 503 Error?]]></display-name>
    <script encoded="false"><![CDATA[//Look for "503" within the error message.  I was going to look for the exact phrase that 
// VAPI uses for 503 errors, but I thought that might change between VAPI versions.

if (errorCode.indexOf("503") !== -1) return true;
else return false;]]></script>
    <in-binding>
      <bind name="errorCode" type="string" export-name="errorCode"/>
    </in-binding>
    <position y="109.04545454545453" x="345.0"/>
  </workflow-item>
  <workflow-item name="item5" throw-bind-name="errorCode" type="end" end-mode="1">
    <position y="109.04545454545453" x="524.5"/>
  </workflow-item>
  <presentation>
    <p-param name="vapiEndpoint">
      <desc><![CDATA[The vAPI Endpointt o connect to]]></desc>
      <p-qual kind="static" name="show-select-as" type="string"><![CDATA[list]]></p-qual>
      <p-qual kind="static" name="mandatory" type="boolean"><![CDATA[true]]></p-qual>
      <p-qual name="contextualParameter" type="void"><![CDATA[__NULL__]]></p-qual>
    </p-param>
    <p-param name="categoryId">
      <desc><![CDATA[ID of the tag category to which the new tag will belong]]></desc>
      <p-qual kind="static" name="mandatory" type="boolean"><![CDATA[true]]></p-qual>
    </p-param>
    <p-param name="description">
      <desc><![CDATA[Description for the new tag]]></desc>
    </p-param>
    <p-param name="tagName">
      <desc><![CDATA[Name for the new tag]]></desc>
    </p-param>
  </presentation>
</workflow>