<?xml version='1.0' encoding='UTF-8'?>
<workflow xmlns="http://vmware.com/vco/workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd" root-name="item1" object-name="workflow:name=generic" id="27ec7cc8-ef91-4fd2-a392-1f2fb2668785" version="1.0.0" api-version="6.0.0" allowed-operations="evf" restartMode="1" resumeFromFailedMode="0">
  <display-name><![CDATA[Lifecycle Template - Disposing]]></display-name>
  <description><![CDATA[This template does not include "Get Lifecycle Objects" so that Disposing can be re-run for troubleshooting after the vRA/vCenter objects are destroyed.]]></description>
  <position y="50.0" x="100.0"/>
  <input>
    <param name="payload" type="Properties"/>
  </input>
  <output>
    <param name="virtualMachineAddOrUpdateProperties" type="Properties">
      <description><![CDATA[Updates to any of the vRA custom properties]]></description>
    </param>
  </output>
  <attrib name="logPayload" type="boolean" read-only="true" conf-id="4a366594-86e6-4cda-a66d-d805f0c43634" conf-key="logPayload">
    <value encoded="n"><![CDATA[true]]></value>
    <description><![CDATA[Determines if the contents of the payload input will be logged]]></description>
  </attrib>
  <attrib name="customProperties" type="Properties" read-only="false">
    <description><![CDATA[vRA Custom Properties of the target VM]]></description>
  </attrib>
  <attrib name="vmName" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
    <description><![CDATA[The name of the target VM in vRA and vCenter]]></description>
  </attrib>
  <attrib name="alsoDeleteComputerSubtree" type="boolean" read-only="true" conf-id="000223b2-3433-4bfc-8c1f-c4c4dc1f8bf7" conf-key="alsoDeleteComputerSubtree">
    <description><![CDATA[True performs a more thorough delete of the AD Computer object]]></description>
  </attrib>
  <attrib name="errorCode" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="errorList" type="Array/string" read-only="false">
    <value encoded="n"><![CDATA[__NULL__]]></value>
    <description><![CDATA[Running list of errors, to report at the end]]></description>
  </attrib>
  <attrib name="hasErrors" type="boolean" read-only="false">
    <value encoded="n"><![CDATA[__NULL__]]></value>
    <description><![CDATA[Indicates if errors were encountered during the workflow]]></description>
  </attrib>
  <workflow-item name="item0" type="end" end-mode="0">
    <position y="45.40909090909091" x="944.5"/>
  </workflow-item>
  <workflow-item name="item2" out-name="item5" type="task">
    <display-name><![CDATA[Add/Update Props]]></display-name>
    <script encoded="false"><![CDATA[//Update or add any Custom Properties here
// Event Broker Workflow Subscription must be set to Blocking.  To change an existing 
// subscription from non-Blocking to Blocking, delete it and re-create it.

//Preserve any custom property additions from previous workflows in this LifeCycle state
var newProps = payload.get("virtualMachineAddOrUpdateProperties");
if (!newProps) {
	newProps = new Properties();
}

//Example custom property addition:
//newProps.put('VirtualMachine.Network0.Name', 'dvPortGroup');

virtualMachineAddOrUpdateProperties = newProps;
]]></script>
    <in-binding>
      <bind name="payload" type="Properties" export-name="payload"/>
    </in-binding>
    <out-binding>
      <bind name="virtualMachineAddOrUpdateProperties" type="Properties" export-name="virtualMachineAddOrUpdateProperties">
        <description><![CDATA[Custom or system properties that were modified by the vRO workflow and returned to vRA]]></description>
      </bind>
    </out-binding>
    <position y="55.40909090909091" x="624.5"/>
  </workflow-item>
  <workflow-item name="item3" out-name="item2" catch-name="item4" throw-bind-name="errorCode" type="link" linked-workflow-id="c465708e-268b-4da9-a190-be639985139c">
    <display-name><![CDATA[Delete a Computer from AD by Name]]></display-name>
    <in-binding>
      <bind name="computerName" type="string" export-name="vmName">
        <description><![CDATA[The name of the Computer object to delete from AD]]></description>
      </bind>
      <bind name="alsoDeleteComputerSubtree" type="boolean" export-name="alsoDeleteComputerSubtree">
        <description><![CDATA[True performs a more thorough delete of the Computer object]]></description>
      </bind>
    </in-binding>
    <out-binding/>
    <position y="55.40909090909091" x="485.0"/>
  </workflow-item>
  <workflow-item name="item4" out-name="item2" type="link" linked-workflow-id="b293bff4-4450-425e-8358-753a778b17e1">
    <display-name><![CDATA[Record an Error]]></display-name>
    <in-binding>
      <bind name="errorCode" type="string" export-name="errorCode">
        <description><![CDATA[Error message from the parent workflow]]></description>
      </bind>
      <bind name="errorList" type="Array/string" export-name="errorList">
        <description><![CDATA[Object to track all errors in the parent workflow. Will be updated to include errorCode.]]></description>
      </bind>
    </in-binding>
    <out-binding>
      <bind name="updatedErrorList" type="Array/string" export-name="errorList">
        <description><![CDATA[Object to track all errors in the parent workflow. Will be updated to include errorCode.]]></description>
      </bind>
      <bind name="hasErrors" type="boolean" export-name="hasErrors">
        <description><![CDATA[Will be True. Parent workflow should have a matching attribute to track if errors were encounted. Bind it to this.]]></description>
      </bind>
    </out-binding>
    <description><![CDATA[Adds an error message to a running list of errors, so that a parent workflow can move on and then process all of its errors at the end.]]></description>
    <position y="109.95454545454544" x="485.0"/>
  </workflow-item>
  <workflow-item name="item5" out-name="item0" type="condition" alt-out-name="item7" comparator="0">
    <display-name><![CDATA[No Errors?]]></display-name>
    <script encoded="false"><![CDATA[//Generated by the system, cannot be edited
return (hasErrors == false) ;]]></script>
    <in-binding>
      <bind name="hasErrors" type="boolean" export-name="hasErrors"/>
    </in-binding>
    <condition name="hasErrors" type="boolean" comparator="1" label="null">false</condition>
    <position y="45.40909090909091" x="764.5"/>
  </workflow-item>
  <workflow-item name="item6" throw-bind-name="errorCode" type="end" end-mode="1">
    <position y="154.5" x="944.5"/>
  </workflow-item>
  <workflow-item name="item7" out-name="item8" type="task">
    <display-name><![CDATA[Format Err Msgs]]></display-name>
    <script encoded="false"><![CDATA[//Get the VM owner
//If payload is bad, don't throw an error - just move on
var owner = "";
try {
	var machine = payload.get("machine");
	owner = machine.get("owner");
} catch(err) {
	owner = "unknown";
	System.error(err);
}

//Build the error message for the alert
errorCode = "The following errors were encountered while Disposing VM '"
	+ vmName + "' owned by '" + owner + "':";

for (i = 0; i < errorList.length; i++) {
	errorCode += "\n" + errorList[i];
}]]></script>
    <in-binding>
      <bind name="payload" type="Properties" export-name="payload"/>
      <bind name="vmName" type="string" export-name="vmName">
        <description><![CDATA[The name of the target VM in vRA and vCenter]]></description>
      </bind>
      <bind name="errorList" type="Array/string" export-name="errorList">
        <description><![CDATA[Running list of errors, to report at the end]]></description>
      </bind>
    </in-binding>
    <out-binding>
      <bind name="errorCode" type="string" export-name="errorCode"/>
    </out-binding>
    <position y="109.95454545454544" x="765.0"/>
  </workflow-item>
  <workflow-item name="item8" out-name="item6" type="link" linked-workflow-id="d1f53b96-7ffc-484b-95f9-86bbb5885ca5">
    <display-name><![CDATA[vRO Email Alert]]></display-name>
    <in-binding>
      <bind name="errorCode" type="string" export-name="errorCode"/>
    </in-binding>
    <out-binding/>
    <description><![CDATA[Sends an alert email to vRA/vRO Admins.  Includes some standard formatting to identify to the receiver where the alert is coming from in vRA.]]></description>
    <position y="164.5" x="764.5"/>
  </workflow-item>
  <workflow-item name="item1" out-name="item9" type="task" script-module="com.thinkahead.vra.eventbroker/logPayload">
    <display-name><![CDATA[logPayload]]></display-name>
    <script encoded="false"><![CDATA[//Auto generated script, cannot be modified !
System.getModule("com.thinkahead.vra.eventbroker").logPayload(payload,writeToSystemLog) ;]]></script>
    <in-binding>
      <bind name="payload" type="Properties" export-name="payload">
        <description><![CDATA[payload object from the Event Subscription]]></description>
      </bind>
      <bind name="writeToSystemLog" type="boolean" export-name="logPayload">
        <description><![CDATA[If false, payload is written to the Debug log instead of the System log]]></description>
      </bind>
    </in-binding>
    <out-binding/>
    <description><![CDATA[Logs the contents of an event subscription payload (a Properties object with multiple layers of nested Properties objects)]]></description>
    <position y="55.90909090909091" x="205.0"/>
  </workflow-item>
  <workflow-item name="item9" out-name="item3" type="task">
    <display-name><![CDATA[Get Props]]></display-name>
    <script encoded="false"><![CDATA[var machine = payload.get("machine");
customProperties = machine.get("properties");
vmName = machine.get("name");]]></script>
    <in-binding>
      <bind name="payload" type="Properties" export-name="payload"/>
    </in-binding>
    <out-binding>
      <bind name="customProperties" type="Properties" export-name="customProperties">
        <description><![CDATA[vRA Custom Properties of the target VM]]></description>
      </bind>
      <bind name="vmName" type="string" export-name="vmName">
        <description><![CDATA[The name of the target VM in vRA and vCenter]]></description>
      </bind>
    </out-binding>
    <position y="55.90909090909091" x="345.0"/>
  </workflow-item>
  <presentation>
    <p-param name="payload">
      <desc><![CDATA[payload]]></desc>
    </p-param>
  </presentation>
</workflow>