<?xml version='1.0' encoding='UTF-8'?>
<workflow xmlns="http://vmware.com/vco/workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd" root-name="item2" object-name="workflow:name=generic" id="54b5e6f3-f866-4f7b-a9d7-7197db5acf98" version="1.0.1" api-version="6.0.0" allowed-operations="evf" restartMode="1" resumeFromFailedMode="0">
  <display-name><![CDATA[MachineProvisioned Error Handler]]></display-name>
  <description><![CDATA[Sends an alert email to the vRO Admins, and prevents vRA from deleting the VM for a number of minutes, so an admin can perform troubleshooting.

Admin email address(es) and number of minutes are configurable via Configuration Elements.

If you set this wait time above 20 minutes or so, be sure to increase the timeout for MachineProvisioned in 2 places:
1) Any Event Subscriptions for MachineProvisioned (blank = unlimited)
2) The IaaS server's ManagerService.exe.config file (default = 30 min)

Instructions for updating the IaaS server's ManagerService.exe.config are here:
https://pubs.vmware.com/vra-70/index.jsp?topic=%2Fcom.vmware.vra.extensibility.doc%2FGUID-246CD2CE-0940-40C9-B813-8510C4DC6A3F.html]]></description>
  <position y="50.0" x="100.0"/>
  <input>
    <param name="errorCode" type="string">
      <description><![CDATA[Error message to include in the alert email Body]]></description>
    </param>
  </input>
  <attrib name="waitOnErrorBeforeDisposing" type="number" read-only="false" conf-id="4a366594-86e6-4cda-a66d-d805f0c43634" conf-key="waitOnErrorBeforeDisposing">
    <value encoded="n"><![CDATA[30.0]]></value>
    <description><![CDATA[How many minutes to wait when a provisioning workflow error occurs, before destroying the VM]]></description>
  </attrib>
  <attrib name="waitOnErrorTimer" type="Date" read-only="false">
    <value encoded="n"><![CDATA[__NULL__]]></value>
    <description><![CDATA[Will be set to a number of minutes from now, determined by 'waitOnErrorBeforeDisposing']]></description>
  </attrib>
  <attrib name="emailErrorCode" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
    <description><![CDATA[Exception variable]]></description>
  </attrib>
  <workflow-item name="item0" type="end" end-mode="0">
    <position y="45.40909090909091" x="664.5"/>
  </workflow-item>
  <workflow-item name="item1" out-name="item0" type="waiting-timer">
    <display-name><![CDATA[Waiting timer]]></display-name>
    <in-binding>
      <bind name="timer.date" type="Date" export-name="waitOnErrorTimer">
        <description><![CDATA[This timer item will wait until date and will continue workflow execution.]]></description>
      </bind>
    </in-binding>
    <position y="45.40909090909091" x="524.5"/>
  </workflow-item>
  <workflow-item name="item2" out-name="item3" type="task">
    <display-name><![CDATA[Set Timer + Log]]></display-name>
    <script encoded="false"><![CDATA[System.warn("Error encountered, sending email alert and waiting " 
	+ waitOnErrorBeforeDisposing + " minutes before Disposing.");

//Get current time
var now = new Date();
var nowMs = now.getTime();
System.debug("Current time: " + now);
System.debug("Current time in milliseconds: " + nowMs);

//Get the future time
var minsToWait = waitOnErrorBeforeDisposing;
var secsToWait = minsToWait * 60;
var msToWait = secsToWait * 1000;
var future = new Date();
future.setTime(nowMs + msToWait);
System.debug("Time to wait till: " + future);
System.debug("Time to wait till in milliseconds: " + future.getTime());

//Output
waitOnErrorTimer = future;]]></script>
    <in-binding>
      <bind name="waitOnErrorBeforeDisposing" type="number" export-name="waitOnErrorBeforeDisposing">
        <description><![CDATA[How many minutes to wait when a provisioning workflow error occurs, before destroying the VM]]></description>
      </bind>
    </in-binding>
    <out-binding>
      <bind name="waitOnErrorTimer" type="Date" export-name="waitOnErrorTimer">
        <description><![CDATA[Will be set to a number of minutes from now, determined by 'waitOnErrorBeforeDisposing']]></description>
      </bind>
    </out-binding>
    <position y="55.40909090909091" x="204.5"/>
  </workflow-item>
  <workflow-item name="item3" out-name="item1" catch-name="item1" throw-bind-name="emailErrorCode" type="link" linked-workflow-id="d1f53b96-7ffc-484b-95f9-86bbb5885ca5">
    <display-name><![CDATA[vRO Email Alert]]></display-name>
    <in-binding>
      <bind name="errorCode" type="string" export-name="errorCode">
        <description><![CDATA[Error message to include in the alert email Body]]></description>
      </bind>
    </in-binding>
    <out-binding/>
    <description><![CDATA[Can be called when an error occurs in a workflow.  Sends an email alert to vRA/vRO Admins, who are defined in a Configuration Element.

Subject line includes the name of the parent workflow.  
E-mail body includes errorCode (input), which typically mapped to an Exception attribute in the parent workflow.]]></description>
    <position y="55.40909090909091" x="344.5"/>
  </workflow-item>
  <presentation>
    <p-param name="errorCode">
      <desc><![CDATA[Error message to include in the alert email Body]]></desc>
    </p-param>
  </presentation>
</workflow>