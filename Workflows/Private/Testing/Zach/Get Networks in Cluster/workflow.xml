<?xml version='1.0' encoding='UTF-8'?>
<workflow xmlns="http://vmware.com/vco/workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd" root-name="item1" object-name="workflow:name=generic" id="fc1bdda0-9e02-4fd7-837f-93653c70ad51" version="0.0.0" api-version="6.0.0" allowed-operations="vfe" restartMode="1" resumeFromFailedMode="0">
  <display-name><![CDATA[Get Networks in Cluster]]></display-name>
  <position y="50.0" x="100.0"/>
  <input>
    <param name="cluster" type="VC:ClusterComputeResource"/>
  </input>
  <workflow-item name="item0" type="end" end-mode="0">
    <position y="45.40909090909091" x="384.5"/>
  </workflow-item>
  <workflow-item name="item1" out-name="item0" type="task">
    <display-name><![CDATA[Scriptable task]]></display-name>
    <script encoded="false"><![CDATA[var networks = [];
allNetworks = cluster.network;

for(n in allNetworks) {
	netName = allNetworks[n].name;
	// Rips vDSwitch tag off of name.
	parLoc = netName.indexOf("(");
	name = netName.slice(0,parLoc-1);
	// Pushes just name of network to array
	System.log(name);
	networks.push(name);
}

System.log("Found " +networks.length + " networks in the " + cluster.name + " cluster.");
var vw = "virtualwire-59";
System.log("Looking for a network with the string: "+vw);

var network;
//Find the network that has the virtualwire name in it.
for(n in networks) {
	if(networks[n].search(vw) > -1) {
		System.log("Found: "+networks[n]);
		network = networks[n];
		break;
	}
}]]></script>
    <in-binding>
      <bind name="cluster" type="VC:ClusterComputeResource" export-name="cluster"/>
    </in-binding>
    <out-binding/>
    <position y="55.40909090909091" x="204.5"/>
  </workflow-item>
  <presentation>
    <p-param name="cluster">
      <desc><![CDATA[cluster]]></desc>
    </p-param>
  </presentation>
</workflow>