<?xml version='1.0' encoding='UTF-8'?>
<workflow xmlns="http://vmware.com/vco/workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd" root-name="item1" object-name="workflow:name=generic" id="c86e36ec-5ecd-4659-9632-0214f9db75a9" version="0.0.0" api-version="6.0.0" allowed-operations="vfe" restartMode="1" resumeFromFailedMode="0">
  <display-name><![CDATA[Add Storage]]></display-name>
  <position y="50.0" x="100.0"/>
  <attrib name="storagePathToAdd" type="string" read-only="false">
    <value encoded="n"><![CDATA[vracompstr01-metro-mke]]></value>
  </attrib>
  <workflow-item name="item0" type="end" end-mode="0">
    <position y="45.40909090909091" x="384.5"/>
  </workflow-item>
  <workflow-item name="item1" out-name="item0" type="task">
    <display-name><![CDATA[Scriptable task]]></display-name>
    <script encoded="false"><![CDATA[var reservationNameInput = "Test Business Group 42";  
//var uncheckNetworkLabelListInput = ["VM Network"];  
  
System.log("Search for reservation with name " + reservationNameInput);  
var host = Server.findAllForType("vCAC:VCACHost")[0];   
var vcaccafeHost = Server.findAllForType("vCACCAFE:VCACHost")[0];  
var reservationClient = vcaccafeHost.createReservationClient();  
var reservationService = reservationClient.getReservationReservationService();  
var tenantReservationPagedResources = reservationService.getAllReservations(null);  
  
var reservationToUpdate = null;  
for each(var reservation in tenantReservationPagedResources.getContent()){  
    System.log("Reservation " + reservation.getName())  
    if(reservation.getName().toLowerCase() == reservationNameInput.toLowerCase()) {  
        reservationToUpdate = reservation;  
        break;  
    }  
}  
System.log("Found Reservation " + reservationToUpdate.getName());  
  
var extData = reservationToUpdate.getExtensionData();  
var storageLiteral = extData.get("reservationStorages");  


hostReservationEntity = System.getModule("com.vmware.library.vcac").getReservationEntityByName(host,reservationToUpdate.getName()) ;
//var hostReservationEntity = reservationToUpdate.getEntity();
var rStorages = hostReservationEntity.getLink(host, "HostReservationToStorages");
var hostReservationToStorage = null;
evalHostReservationToStorage(rStorages);

function evalHostReservationToStorage(reservStorages) {
	for each (var rs in reservStorages) {
		var storage = rs.getLink(host, "HostToStorage")[0];
		var isCluster = storage.getProperty("IsStorageCluster");
		var sp = storage.getProperty("StoragePath");
		System.log("sp = "+sp);
		if (isCluster === true) {
			var children = storage.getLink(host, "Children");
			for each (var childHostTosTorage in children) {
				System.log("storagepath = "+childHostTosTorage.getProperty("StoragePath"));
				if (childHostTosTorage.getProperty("StoragePath") == storagePathToAdd) {
					hostReservationToStorage = rs;
					System.log("childHostTosTorage = "+childHostTosTorage);
				}
			}
		} 
return hostReservationToStorage;
System.log("hostReservationToStorage = "+hostReservationToStorage);
		System.log("Storage storage path: " + storage.getProperty("StoragePath"));
		if (storage.getProperty("StoragePath") == storagePath) {
			hostReservationToStorage = rs;
		}
	}
}


var complexArray =  new Array();  
for each(var storage in storageLiteral.getValue()) {  
    var storageLabel = storage.getValue().get("storagePath").getLabel();  
    System.log("storageLabel = "+storageLabel);  
  
        complexArray.push(storage);  
}  
System.log("complexArray = "+complexArray); 
/*  
var typeID = vCACCAFEDataTypeId.valueOf("COMPLEX") ;  
var newNetworkLiteral = new vCACCAFEMultipleLiteral(complexArray, typeID);  
  
extData.put("reservationNetworks", newNetworkLiteral)*/  
  
//reservationService.updateReservation(reservationToUpdate); ]]></script>
    <in-binding>
      <bind name="storagePathToAdd" type="string" export-name="storagePathToAdd"/>
    </in-binding>
    <out-binding/>
    <position y="55.40909090909091" x="204.5"/>
  </workflow-item>
  <presentation/>
</workflow>