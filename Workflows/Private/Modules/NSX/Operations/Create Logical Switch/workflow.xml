<?xml version='1.0' encoding='UTF-8'?>
<workflow xmlns="http://vmware.com/vco/workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd" root-name="item4" object-name="workflow:name=generic" id="9a671be3-bf6a-40e3-ba86-008c481ebcf6" version="0.0.1" api-version="6.0.0" allowed-operations="evf" restartMode="1" resumeFromFailedMode="0">
  <display-name><![CDATA[Create Logical Switch]]></display-name>
  <description><![CDATA[Autogenerated workflow.]]></description>
  <position y="50.0" x="160.0"/>
  <input>
    <param name="switchName" type="string">
      <description><![CDATA[Logical Switch Name]]></description>
    </param>
    <param name="switchDesc" type="string">
      <description><![CDATA[Description of the Logical Switch]]></description>
    </param>
  </input>
  <output>
    <param name="statusCode" type="Number">
      <description><![CDATA[Response status code]]></description>
    </param>
    <param name="contentLength" type="Number">
      <description><![CDATA[Response content length]]></description>
    </param>
    <param name="headers" type="Properties">
      <description><![CDATA[Response headers]]></description>
    </param>
    <param name="contentAsString" type="String">
      <description><![CDATA[Response content as string]]></description>
    </param>
  </output>
  <attrib name="errorCode" type="String" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="restOperation" type="REST:RESTOperation" read-only="true">
    <value encoded="n"><![CDATA[dunes://service.dunes.ch/CustomSDKObject?id='14bc71f7-7aa9-4dac-ad61-f9f335e4f43a:8b858c1a-bd10-49b7-a92c-05ed6b9f4755'&dunesName='REST:RESTOperation']]></value>
  </attrib>
  <attrib name="statusCodeAttribute" type="Number" read-only="false"/>
  <attrib name="hostResource" type="ResourceElement" read-only="true">
    <value encoded="n"><![CDATA[dunes://service.dunes.ch/ResourceElement?id='6dda9a2c-edcb-4d09-b618-d3211b84bab4'&dunesName='ResourceElement']]></value>
  </attrib>
  <attrib name="scopeId" type="String" read-only="false" conf-id="5dc44ab5-7bf7-4a75-91e1-2f542cb4ec33" conf-key="defaultTransportZone">
    <value encoded="n"><![CDATA[]]></value>
    <description><![CDATA[scopeId]]></description>
  </attrib>
  <attrib name="content" type="String" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
    <description><![CDATA[content]]></description>
  </attrib>
  <workflow-item name="item0" type="end" end-mode="0">
    <position y="290.8636363636363" x="165.0"/>
  </workflow-item>
  <workflow-item name="item1" throw-bind-name="errorCode" type="end" end-mode="1">
    <position y="236.3181818181818" x="265.0"/>
  </workflow-item>
  <workflow-item name="item2" out-name="item0" throw-bind-name="errorCode" type="custom-condition" alt-out-name="item1">
    <display-name><![CDATA[Custom Condition]]></display-name>
    <script encoded="false"><![CDATA[if ( statusCodeAttribute >= 400 ) {
    throw "HTTPError: status code: " + statusCodeAttribute;
} else {
    return true;
}]]></script>
    <in-binding>
      <bind name="statusCodeAttribute" type="Number" export-name="statusCodeAttribute"/>
    </in-binding>
    <position y="236.3181818181818" x="125.0"/>
  </workflow-item>
  <workflow-item name="item3" out-name="item2" catch-name="item1" throw-bind-name="errorCode" type="task">
    <display-name><![CDATA[Scripting]]></display-name>
    <script encoded="false"><![CDATA[//prepare request
//Do not edit 
var inParamtersValues = [scopeId];
var request = restOperation.createRequest(inParamtersValues, content);
//set the request content type
request.contentType = "application\/xml";
System.log("Request: " + request);
System.log("Request URL: " + request.fullUrl);

//Customize the request here
//request.setHeader("headerName", "headerValue");

//execute request
//Do not edit 
var response = request.execute();
//prepare output parameters
System.log("Response: " + response);
statusCode = response.statusCode;
statusCodeAttribute = statusCode;
System.log("Status code: " + statusCode);
contentLength = response.contentLength;
headers = response.getAllHeaders();
contentAsString = response.contentAsString;
System.log("Content as string: " + contentAsString);]]></script>
    <in-binding>
      <bind name="scopeId" type="String" export-name="scopeId"/>
      <bind name="content" type="String" export-name="content"/>
      <bind name="restOperation" type="REST:RESTOperation" export-name="restOperation"/>
      <bind name="statusCodeAttribute" type="Number" export-name="statusCodeAttribute"/>
      <bind name="hostResource" type="ResourceElement" export-name="hostResource"/>
    </in-binding>
    <out-binding>
      <bind name="statusCode" type="Number" export-name="statusCode"/>
      <bind name="contentLength" type="Number" export-name="contentLength"/>
      <bind name="headers" type="Properties" export-name="headers"/>
      <bind name="contentAsString" type="String" export-name="contentAsString"/>
      <bind name="statusCodeAttribute" type="Number" export-name="statusCodeAttribute"/>
    </out-binding>
    <position y="182.68181818181816" x="125.0"/>
  </workflow-item>
  <workflow-item name="item4" out-name="item3" type="task">
    <display-name><![CDATA[Form Content]]></display-name>
    <script encoded="false"><![CDATA[var content = "<virtualWireCreateSpec> \
<name>"+switchName+"</name>\
<description>"+switchDesc+"</description> \
<tenantId>virtual wire tenant</tenantId> \
<controlPlaneMode>HYBRID_MODE</controlPlaneMode> \
<guestVlanAllowed>false</guestVlanAllowed> \
</virtualWireCreateSpec>";

System.log("XML Payload: "+content);]]></script>
    <in-binding>
      <bind name="switchName" type="string" export-name="switchName"/>
      <bind name="switchDesc" type="string" export-name="switchDesc"/>
    </in-binding>
    <out-binding>
      <bind name="content" type="String" export-name="content"/>
    </out-binding>
    <position y="119.04545454545453" x="125.0"/>
  </workflow-item>
  <presentation>
    <p-step>
      <title><![CDATA[Create Logical Switch]]></title>
    </p-step>
    <p-group>
      <title><![CDATA[Url parameters]]></title>
    </p-group>
    <p-group>
      <title><![CDATA[Request content]]></title>
    </p-group>
    <p-param name="switchName">
      <desc><![CDATA[Logical Switch Name]]></desc>
    </p-param>
    <p-param name="switchDesc">
      <desc><![CDATA[Description of the Logical Switch]]></desc>
    </p-param>
  </presentation>
</workflow>