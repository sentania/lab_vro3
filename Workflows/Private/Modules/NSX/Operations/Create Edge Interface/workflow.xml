<?xml version='1.0' encoding='UTF-8'?>
<workflow xmlns="http://vmware.com/vco/workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd" root-name="item4" object-name="workflow:name=generic" id="d463727c-353b-4510-a27d-2cd6193e9bc9" version="0.0.1" api-version="6.0.0" allowed-operations="evf" restartMode="1" resumeFromFailedMode="0">
  <display-name><![CDATA[Create Edge Interface]]></display-name>
  <description><![CDATA[Autogenerated workflow.]]></description>
  <position y="50.0" x="160.0"/>
  <input>
    <param name="switchID" type="string">
      <description><![CDATA[Logical Switch ID]]></description>
    </param>
    <param name="interfaceName" type="string">
      <description><![CDATA[Name of the new Interface]]></description>
    </param>
    <param name="location" type="string">
      <description><![CDATA[Datacenter Location]]></description>
    </param>
    <param name="cidr" type="string">
      <description><![CDATA[CIDR notation]]></description>
    </param>
    <param name="gw" type="string">
      <description><![CDATA[Gateway Address]]></description>
    </param>
  </input>
  <output>
    <param name="statusCode" type="Number">
      <description><![CDATA[Response status code]]></description>
    </param>
    <param name="contentLength" type="Number">
      <description><![CDATA[Response content length]]></description>
    </param>
    <param name="headers" type="Properties">
      <description><![CDATA[Response headers]]></description>
    </param>
    <param name="contentAsString" type="String">
      <description><![CDATA[Response content as string]]></description>
    </param>
  </output>
  <attrib name="errorCode" type="String" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="restOperation" type="REST:RESTOperation" read-only="true">
    <value encoded="n"><![CDATA[dunes://service.dunes.ch/CustomSDKObject?id='14bc71f7-7aa9-4dac-ad61-f9f335e4f43a:84d86fc6-948a-4cad-910a-2b9e6b608255'&dunesName='REST:RESTOperation']]></value>
  </attrib>
  <attrib name="statusCodeAttribute" type="Number" read-only="false"/>
  <attrib name="hostResource" type="ResourceElement" read-only="true">
    <value encoded="n"><![CDATA[dunes://service.dunes.ch/ResourceElement?id='6dda9a2c-edcb-4d09-b618-d3211b84bab4'&dunesName='ResourceElement']]></value>
  </attrib>
  <attrib name="content" type="String" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
    <description><![CDATA[content]]></description>
  </attrib>
  <attrib name="edgeId" type="String" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
    <description><![CDATA[edgeId]]></description>
  </attrib>
  <workflow-item name="item0" type="end" end-mode="0">
    <position y="290.8636363636363" x="165.0"/>
  </workflow-item>
  <workflow-item name="item1" throw-bind-name="errorCode" type="end" end-mode="1">
    <position y="236.3181818181818" x="265.0"/>
  </workflow-item>
  <workflow-item name="item2" out-name="item0" throw-bind-name="errorCode" type="custom-condition" alt-out-name="item1">
    <display-name><![CDATA[Custom Condition]]></display-name>
    <script encoded="false"><![CDATA[if ( statusCodeAttribute >= 400 ) {
    throw "HTTPError: status code: " + statusCodeAttribute;
} else {
    return true;
}]]></script>
    <in-binding>
      <bind name="statusCodeAttribute" type="Number" export-name="statusCodeAttribute"/>
    </in-binding>
    <position y="236.3181818181818" x="125.0"/>
  </workflow-item>
  <workflow-item name="item3" out-name="item2" catch-name="item1" throw-bind-name="errorCode" type="task">
    <display-name><![CDATA[Scripting]]></display-name>
    <script encoded="false"><![CDATA[//prepare request
//Do not edit 
var inParamtersValues = [edgeId];
var request = restOperation.createRequest(inParamtersValues, content);
//set the request content type
request.contentType = "application\/xml";
System.log("Request: " + request);
System.log("Request URL: " + request.fullUrl);

//Customize the request here
//request.setHeader("headerName", "headerValue");

//execute request
//Do not edit 
var response = request.execute();
//prepare output parameters
System.log("Response: " + response);
statusCode = response.statusCode;
statusCodeAttribute = statusCode;
System.log("Status code: " + statusCode);
contentLength = response.contentLength;
headers = response.getAllHeaders();
contentAsString = response.contentAsString;
System.log("Content as string: " + contentAsString);]]></script>
    <in-binding>
      <bind name="edgeId" type="String" export-name="edgeId"/>
      <bind name="content" type="String" export-name="content"/>
      <bind name="restOperation" type="REST:RESTOperation" export-name="restOperation"/>
      <bind name="statusCodeAttribute" type="Number" export-name="statusCodeAttribute"/>
      <bind name="hostResource" type="ResourceElement" export-name="hostResource"/>
    </in-binding>
    <out-binding>
      <bind name="statusCode" type="Number" export-name="statusCode"/>
      <bind name="contentLength" type="Number" export-name="contentLength"/>
      <bind name="headers" type="Properties" export-name="headers"/>
      <bind name="contentAsString" type="String" export-name="contentAsString"/>
      <bind name="statusCodeAttribute" type="Number" export-name="statusCodeAttribute"/>
    </out-binding>
    <position y="182.68181818181816" x="125.0"/>
  </workflow-item>
  <workflow-item name="item4" out-name="item3" type="task">
    <display-name><![CDATA[Set Variables & Form Content]]></display-name>
    <script encoded="false"><![CDATA[// Set edgeID based on location
var edgeElement = location+"EdgeId";

// 1. Find edgeID from Config Element
	// 1.1 Get ConfigElement values
	var nsxElement = [];
	var ConfigElCategory = Server.getConfigurationElementCategoryWithPath("UCP");
	System.log(ConfigElCategory.name);
	var configEls = ConfigElCategory.allConfigurationElements;
	for(element in configEls) {
		if(configEls[element].name == "NSX") {
		nsxElement = configEls[element];
		System.log("NSX Elements: "+nsxElement.name);
		}
	}

	// 1.2 Get EdgeId
	var edgeId;
	if(nsxElement.getAttributeWithKey(edgeElement) != null) {
		attribute = nsxElement.getAttributeWithKey(edgeElement);
		edgeId = attribute.value;
		System.log(edgeId.name);
	}
	
	
// 2. define subMask based on CIDR
var subMask;
switch(cidr) {
	case "24":
		subMask = "255.255.255.0";
		break;
	case "25":
		subMask = "255.255.255.128";
		break;
	case "26":
		subMask = "255.255.255.192";
		break;
	case "27":
		subMask = "255.255.255.224";
		break;
	case "28":
		subMask = "255.255.255.240";
		break;
}
		
	
// 3. Form Content Payload
var content = "<interfaces> \
<interface> \
<name>"+interfaceName+"</name> \
<addressGroups> \
<addressGroup> \
<primaryAddress>"+gw+"</primaryAddress> \
<subnetMask>"+subMask+"</subnetMask> \
<subnetPrefixLength>"+cidr+"</subnetPrefixLength> \
</addressGroup> \
</addressGroups> \
<mtu>1500</mtu> \
<type>internal</type> \
<isConnected>true</isConnected> \
<connectedToId>"+switchID+"</connectedToId> \
</interface> \
</interfaces>";

System.log("XML Payload: "+content);]]></script>
    <in-binding>
      <bind name="switchID" type="string" export-name="switchID"/>
      <bind name="interfaceName" type="string" export-name="interfaceName"/>
      <bind name="location" type="string" export-name="location"/>
      <bind name="cidr" type="string" export-name="cidr"/>
      <bind name="gw" type="string" export-name="gw"/>
    </in-binding>
    <out-binding>
      <bind name="content" type="String" export-name="content"/>
      <bind name="edgeId" type="String" export-name="edgeId"/>
    </out-binding>
    <position y="119.04545454545453" x="125.0"/>
  </workflow-item>
  <presentation>
    <p-step>
      <title><![CDATA[Create Edge Interface]]></title>
      <p-param name="location">
        <desc><![CDATA[Datacenter Location]]></desc>
        <p-qual kind="static" name="genericEnumeration" type="Array/string"><![CDATA[#{#string#frk#;#string#mke#}#]]></p-qual>
      </p-param>
      <p-param name="interfaceName">
        <desc><![CDATA[Name of the New Interface (frk-ucp-admin-prod)]]></desc>
        <p-qual kind="static" name="mandatory" type="boolean"><![CDATA[true]]></p-qual>
      </p-param>
      <p-param name="switchID">
        <desc><![CDATA[Logical Switch ID (virtualwire-XX)]]></desc>
        <p-qual kind="static" name="mandatory" type="boolean"><![CDATA[true]]></p-qual>
      </p-param>
      <p-param name="cidr">
        <desc><![CDATA[CIDR notation]]></desc>
        <p-qual kind="static" name="genericEnumeration" type="Array/string"><![CDATA[#{#string#24#;#string#25#;#string#26#;#string#27#;#string#28#}#]]></p-qual>
        <p-qual kind="static" name="defaultValue" type="string"><![CDATA[27]]></p-qual>
      </p-param>
      <p-param name="gw">
        <desc><![CDATA[Gateway Address]]></desc>
        <p-qual kind="static" name="inetAddress" type="String"><![CDATA[IPv4 address]]></p-qual>
      </p-param>
    </p-step>
  </presentation>
</workflow>