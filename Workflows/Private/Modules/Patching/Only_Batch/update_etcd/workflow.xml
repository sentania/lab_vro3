<?xml version='1.0' encoding='UTF-8'?>
<workflow xmlns="http://vmware.com/vco/workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd" root-name="item1" object-name="workflow:name=generic" id="3644e155-46d8-47fc-a7ec-ca20702c81a6" version="0.0.7" api-version="6.0.0" allowed-operations="vfe" restartMode="1" resumeFromFailedMode="0">
  <display-name><![CDATA[update_etcd]]></display-name>
  <position y="50.0" x="100.0"/>
  <input>
    <param name="param" type="Array/string"/>
    <param name="patch_wave" type="string"/>
  </input>
  <attrib name="etcd" type="REST:RESTOperation" read-only="false">
    <value encoded="n"><![CDATA[dunes://service.dunes.ch/CustomSDKObject?id='70e161fb-50fe-4860-a709-7904ba88f2ad:808bd40a-328f-4956-b827-8e79ca7e695a'&dunesName='REST:RESTOperation']]></value>
  </attrib>
  <workflow-item name="item0" type="end" end-mode="0">
    <position y="45.40909090909091" x="384.5"/>
  </workflow-item>
  <workflow-item name="item1" out-name="item0" type="task">
    <display-name><![CDATA[Scriptable task]]></display-name>
    <script encoded="false"><![CDATA[to_compare = new Date((patch_wave.split("-")[2] + "-"+ patch_wave.split("-")[0] + "-" + patch_wave.split("-")[1])+ 'T23:59:00.000Z').getTime()/1000 
System.log("PatchWave be compared in unix time -" + to_compare)
var getHosts = Server.findAllForType("REST:RESTHost")
for(var i = 0; i < getHosts.length ; i++){
	if(getHosts[i].name == "ucp-etcd"){
		var R = getHosts[i]
		}
}
System.log(patch_wave + " is MY wave")
formated_publish_date = (patch_wave.split("-")[2] + "-"+ patch_wave.split("-")[0] + "-" + patch_wave.split("-")[1])
for each(Server_Name in param){
	System.log(Server_Name + " - is being checked")
	var session = new SSHSession(Server_Name, "ucpuser", "22");
	session.connectWithPasswordOrIdentity(false,"","/var/lib/vco/app-server/conf/vco_key");
	session.executeCommand("StrictHostKeyChecking=no rpm -qa --qf '%{INSTALLTIME:date}-%{INSTALLTIME}\n' | sort | head -n1" , true)
	var checkbkup = session.getOutput()
	System.log("NoN Formated  Output from system - " + checkbkup)	
	System.log("Last Patched Date and Time -  " + checkbkup.split("-")[1] + "As String - " + checkbkup.split("-")[0] )
	System.log("Details to be updated in ETCD - " + Unix_timestamp(checkbkup.split("-")[1]));
	value = null
	value =	Unix_timestamp(checkbkup.split("-")[1])
	
	if(checkbkup.split("-")[1] > to_compare){
		
	var serverUrl = "/unifiedcompute/servers/" + Server_Name + '?recursive=true' //+ '/state'
	System.log("Get Call for BG PDL - " + serverUrl)
	var Connection = R.createRequest('GET',serverUrl)
	Connection.contentType = "application/x-www-form-urlencoded"
	var response = Connection.execute()
	var valueq = JSON.parse(response.contentAsString)
	temp_key = valueq.node.nodes
	for each(Tkey in temp_key){
		if (Tkey.key.match('contactPDL')){
			System.log(" contactPDL - " + Tkey.value)
			bgpdl = Tkey.value
		}
}
System.log(bgpdl)
bgpdl = "dineshsolaiappan@northwesternmutual.com"
//Updated ETCD

	parse_content = "unifiedcompute/servers/"+ Server_Name + "/lastPatched" + "?value=" + value
	System.log(parse_content)
	var inParamtersValues = [parse_content];
	var request = etcd.createRequest(inParamtersValues);
	request.contentType = "application\/json";
	System.log("Request: " + request);
	System.log("Request URL: " + request.fullUrl);
	var response = request.execute();
	statusCode = response.statusCode;
	System.log("Status code: " + statusCode);
//Check for Failure and notify	
	Content7 = "Thanks"
	Content8 = "Unified Compute Platform"
	if (statusCode != 200){
			Sub1 = "Manual Update for Patching Date has failed for the server - "
			Content0 = "Hi There,"
			Content1 = "Manual update for lastPatch date on UCP Inventory for the server " + Server_Name + " Failed."
			Content2 = "Please contact dl-serverpatching@northwesternmutual.com for more information or to update it, Inorder for the server not to be considered for Force Patching."
			var Content = Content0 + '<br />' + '<br />' +Content1 + '<br />' + '<br />' +Content2+'<br />'+ '<br />' + '<br />' + Content7+ '<br />' + Content8
			eMail(Content, Server_Name,Sub1,bgpdl)
		}else{
			Sub1 = "Manual Update for Patching Date is Successful for server - "
			Content0 = "Hi There,"
			Content1 = "Update for lastPatch date on the UCP Inventory for the server " + Server_Name + " is successfully updated with the below date,"
			Content2 = "Last Patch value is updated to - " + value + ' (yyyyMMdd-hhmm).'
			//Content3 =  "Note:"
			//Content4 = "If this date identified " + value + " is Less than the Latest Patch Publish date below then server will still be considered for Force Patching."
			//Content5 = "Latest Patch Published date is " + formated_publish_date
			Content6 = "Please contact dl-serverpatching@northwesternmutual.com for more information"
			//Content6 ='https://git.nmlv.nml.com/ucp/ucp-automationscripts/blob/master/patching%20schedule.csv'
			//var Content = Content0 + '<br />' + '<br />' + Content1 + '<br />' + '<br />' + Content2 + '<br />' + '<br />' + Content3 + '<br />' + '<br />' + Content4 + '<br />' + '<br />' + Content5+ '<br />' + '<br />' + Content6+ '<br />'+ '<br />' + '<br />' + Content7+ '<br />' + Content8
			var Content = Content0 + '<br />' + '<br />' + Content1 + '<br />' + '<br />' + Content2 + '<br />' + '<br />' + Content6 + '<br />' + '<br />' + Content7 + '<br />' + Content8
			eMail(Content, Server_Name,Sub1,bgpdl)
		} 
	}else{
			Sub1 = "Manual Update for Patching Date Not Successful for server - "
			Content0 = "Hi There,"
			Content1 = "Update for lastPatch date on the UCP Inventory for the server " + Server_Name + " was NOT successfully updated."
			Content2 = "Last Patch value is found on the server - " + value + ' (yyyyMMdd-hhmm).'
			Content3 = "Latest Patch was published on  - " + formated_publish_date
			Content4 = "Please contact dl-serverpatching@northwesternmutual.com for any more information."
			Content5 =  "Note:"
			Content6 = "Server will be considered for Force Patching as this stage, as there are Latest patches published post server was patched "
			var Content = Content0 + '<br />' + '<br />' + Content1 + '<br />' + '<br />' + Content3 + '<br />' + '<br />' + Content4 + '<br />' + '<br />' + Content5+ '<br />' + '<br />' + Content6+ '<br />'+ '<br />' + '<br />' + Content7+ '<br />' + Content8
			eMail(Content, Server_Name,Sub1,bgpdl)
	}
}
function Unix_timestamp(t){
	var dt = new Date(t*1000);
	if(dt.getDate() < 10){formated_date = '0' + dt.getDate()}else{formated_date = dt.getDate()}
	if((dt.getMonth() +1) < 10){formated_month = '0' +(dt.getMonth()+1)}else{formated_month = (dt.getMonth()+1)}
	if(dt.getHours() < 10){formated_hr = '0' + dt.getHours()}else{formated_hr = dt.getHours()}
	if(dt.getMinutes() < 10){formated_min = '0' + dt.getMinutes()}else{formated_min = dt.getMinutes()}
	return dt.getFullYear() + formated_month + formated_date +'-'+ formated_hr+ formated_min
}
function eMail(Content,vmName,Sub1, bgpdl){
	var objEmail = new EmailMessage();
	objEmail.fromAddress = 'ucp-vro@nm.nmfco.com'
	objEmail.fromName = 'DL-SDDC@northwesternmutual.com'
	objEmail.smtpHost = 'hera.nml.com'
	objEmail.smtpPort = 25
	objEmail.toAddress = bgpdl
	objEmail.ccAddress = 'dineshsolaiappan@northwesternmutual.com'//'dl-serverpatching@northwesternmutual.com'
	objEmail.subject = (Sub1 + " - " + vmName)
	objEmail.addMimePart(Content,"text/html; charset=UTF-8")
	objEmail.sendMessage()
}

]]></script>
    <in-binding>
      <bind name="param" type="Array/string" export-name="param"/>
      <bind name="etcd" type="REST:RESTOperation" export-name="etcd"/>
      <bind name="patch_wave" type="string" export-name="patch_wave"/>
    </in-binding>
    <out-binding/>
    <position y="55.40909090909091" x="204.5"/>
  </workflow-item>
  <presentation>
    <p-param name="param">
      <desc><![CDATA[param]]></desc>
    </p-param>
    <p-param name="patch_wave">
      <desc><![CDATA[patch_wave]]></desc>
    </p-param>
  </presentation>
</workflow>