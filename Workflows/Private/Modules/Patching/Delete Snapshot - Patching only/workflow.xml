<?xml version='1.0' encoding='UTF-8'?>
<workflow xmlns="http://vmware.com/vco/workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd" root-name="item1" object-name="workflow:name=generic" id="d714a303-a3da-47f4-a2f5-6c560bc7122a" version="0.0.6" api-version="6.0.0" allowed-operations="vfe" restartMode="1" resumeFromFailedMode="0">
  <display-name><![CDATA[Delete Snapshot - Patching only]]></display-name>
  <position y="50.0" x="100.0"/>
  <input>
    <param name="snap_name" type="string"/>
  </input>
  <attrib name="snap_delete" type="VC:VirtualMachineSnapshot" read-only="false">
    <value encoded="n"><![CDATA[__NULL__]]></value>
  </attrib>
  <attrib name="delete_time" type="Date" read-only="false">
    <value encoded="n"><![CDATA[__NULL__]]></value>
  </attrib>
  <workflow-item name="item0" type="end" end-mode="0">
    <position y="45.40909090909091" x="524.5"/>
  </workflow-item>
  <workflow-item name="item1" out-name="item2" type="task">
    <display-name><![CDATA[Scriptable task]]></display-name>
    <script encoded="false"><![CDATA[/*
function getSnapshotsOfVM(tree) {  
    snap.push([tree.snapshot]); // store a tupple of the snapshot and its creation time  
    var trees = tree.childSnapshotList;  
    if (trees != null) {  
        for (index in trees) {  
            if (trees[index] != null)  
                getSnapshotsOfVM(trees[index]);  
        }  
    }  
} 
	
snap = new Array();
snap_list = VM.snapshot.rootSnapshotList
for (i in snap_list) {  
        getSnapshotsOfVM(snap_list[i]);  
    } 
for (j in snap){
	if(snap[j][0].name == snap_name){
		snap_delete = snap[j]
		}
}
System.log("Snapshot to be deleted " + snap_delete[0].name)
*/


/*Identify VM in vCenter*/
//vm_name = "ucpadmin01304"
//snap_name = "Patching_ucpadmin01304_2019-09-24_11-34-53"
//vm_name = "ucp00003871"
//snap_name = "Patching_ucp00003871_2019-09-24_19-45-08"

vm_name = snap_name.split("_")[1]
System.log("VM Name - " + vm_name)
System.log("Snapshot input Name" + snap_name)


var VirtualMachinelist = VcPlugin.getAllVirtualMachines();
for each(Vmlist in VirtualMachinelist){
		if(vm_name == Vmlist.name){
			System.log("Found Match")
			var VM = Vmlist
			}
	}
	
/*Identify Snapshot in vCenter for the VM*/
Snapshottodelete= null
var Snap = VM.sdkConnection.allVirtualMachineSnapshots
var actionResult =  System.getModule("com.vmware.library.vc.vm.snapshot").getAllSnapshotsOfVM(VM)
for each(sy in actionResult){
		System.log(sy.name)
		System.log(sy.id)
		if(sy.name == snap_name){
				System.log("Found Snapshot Match")
				Snapshottodelete = sy
				System.log("Deletion of Snapshot for Virual Machine" + VM + "is scheduled on" + scheduleDate)
		}
	}
	
if(Snapshottodelete == null){
		System.log("Could not find the matching snapshot details for " + vm_name)
		throw('Could not find Snapshot details')
	}	
/*Sechedule deletion after 48 hrs*/			
var scheduleDate = new Date();
var Scheduleafter = 2 * 24 * 60 * 60 * 1000; // 2 days in milliseconds
scheduleDate.setTime(scheduleDate.getTime() + Scheduleafter);
delete_time = scheduleDate
]]></script>
    <in-binding>
      <bind name="snap_name" type="string" export-name="snap_name"/>
    </in-binding>
    <out-binding>
      <bind name="snap_delete" type="VC:VirtualMachineSnapshot" export-name="snap_delete"/>
      <bind name="delete_time" type="Date" export-name="delete_time"/>
    </out-binding>
    <position y="55.40909090909091" x="204.5"/>
  </workflow-item>
  <workflow-item name="item2" out-name="item0" type="task" launched-workflow-id="d95fd949-a53d-48b3-8766-7c07a37ebf39">
    <display-name><![CDATA[Remove Snapshot after patching]]></display-name>
    <script encoded="false"><![CDATA[//Auto generated script, cannot be modified !
var workflowToLaunch = Server.getWorkflowWithId("d95fd949-a53d-48b3-8766-7c07a37ebf39");
if (workflowToLaunch == null) {
	throw "Workflow not found";
}

var workflowParameters = new Properties();
workflowParameters.put("snapshot",snapshot);
var scheduledTask = workflowToLaunch.schedule(workflowParameters,workflowScheduleDate);]]></script>
    <in-binding>
      <bind name="snapshot" type="VC:VirtualMachineSnapshot" export-name="snap_delete">
        <description><![CDATA[Snapshot Created in previous task]]></description>
      </bind>
      <bind name="workflowScheduleDate" type="Date" export-name="delete_time">
        <description><![CDATA[Schedule execution date]]></description>
      </bind>
    </in-binding>
    <out-binding>
      <bind name="scheduledTask" type="Task">
        <description><![CDATA[Scheduled workflow task]]></description>
      </bind>
    </out-binding>
    <position y="55.90909090909091" x="345.0"/>
  </workflow-item>
  <presentation>
    <p-param name="snap_name">
      <desc><![CDATA[snap_name]]></desc>
    </p-param>
  </presentation>
</workflow>