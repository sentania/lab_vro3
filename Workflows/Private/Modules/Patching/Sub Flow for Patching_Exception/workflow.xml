<?xml version='1.0' encoding='UTF-8'?>
<workflow xmlns="http://vmware.com/vco/workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd" root-name="item1" object-name="workflow:name=generic" id="4f631916-c172-43ac-852d-eac92855d4e2" version="0.0.15" api-version="6.0.0" allowed-operations="evf" restartMode="1" resumeFromFailedMode="0">
  <display-name><![CDATA[Sub Flow for Patching_Exception]]></display-name>
  <position y="50.0" x="100.0"/>
  <input>
    <param name="Server_Name" type="string"/>
    <param name="Patch_Wave" type="string"/>
    <param name="BGEmail" type="string"/>
    <param name="BG_Name" type="string"/>
  </input>
  <output>
    <param name="var2" type="Array/CompositeType(statusCode:Number,contentLength:Number,headers:Properties,contentAsString:String)"/>
  </output>
  <attrib name="Key_Content" type="Array/string" read-only="false">
    <value encoded="n"><![CDATA[__NULL__]]></value>
  </attrib>
  <attrib name="Value_content" type="Array/string" read-only="false">
    <value encoded="n"><![CDATA[__NULL__]]></value>
  </attrib>
  <attrib name="Get_wave_etcd" type="REST:RESTOperation" read-only="false">
    <value encoded="n"><![CDATA[dunes://service.dunes.ch/CustomSDKObject?id='70e161fb-50fe-4860-a709-7904ba88f2ad:f73443c9-66e2-4517-8df1-b6c172ba1d6e'&dunesName='REST:RESTOperation']]></value>
  </attrib>
  <workflow-item name="item0" type="end" end-mode="0">
    <position y="45.40909090909091" x="684.5"/>
  </workflow-item>
  <workflow-item name="item1" out-name="item2" type="task">
    <display-name><![CDATA[Scriptable task]]></display-name>
    <script encoded="false"><![CDATA[System.log(Server_Name + " - Patching Execption is being applied for 30 days")
System.log(Patch_Wave + 'PATCH_Wave')
TWave = Patch_Wave.split("-")[3] + '-' + Patch_Wave.split("-")[4]
System.log("twave  - - - - " + TWave)

//Get force Pacth exception date from pathWaave deatils

content = '/unifiedcompute/patchingSchedule/patchWave/' + TWave + '/PatchForceDate'
var inParamtersValues = [content];
var request = Get_wave_etcd.createRequest(inParamtersValues);
//set the request content type
request.contentType = "application\/json";
System.log("Request: " + request);
System.log("Request URL: " + request.fullUrl);
var response = request.execute();
System.log("Response: " + response);
statusCode = response.statusCode;
statusCodeAttribute = statusCode;
System.log("Status code: " + statusCode);
contentLength = response.contentLength;
headers = response.getAllHeaders();
contentAsString = response.contentAsString;
System.log("Content as string: " + contentAsString);
var currentStatus = JSON.parse(contentAsString)
Tcurrent_fpatch_date = currentStatus.node.value
current_fpatch_date = Tcurrent_fpatch_date.split("-")[0]
System.log('Current Force Patch date :- ' + current_fpatch_date)
year = current_fpatch_date.substring(0,4)
month = (current_fpatch_date.substring(4,6) - 1)
date = current_fpatch_date.substring(6,8) 
Temp_today = new Date(year,month,date)
Temp_today.setDate(Temp_today.getDate() + 30) 
fException_Date = System.formatDate(Temp_today, 'yyyyMMdd' ) 
System.log('Adding 30 days from Force Patching date and exception date set is  :- ' + fException_Date)

var Key_Content = [];
var Value_content = [];
Key_Content.push('unifiedcompute/servers/' + Server_Name +'/exceptions/patchOverride/' + TWave + '/failSafeDate')
Value_content.push(fException_Date)
Key_Content.push('unifiedcompute/servers/' + Server_Name +'/latestpatchexception')
Value_content.push(TWave)



/*Key_Content = 'unifiedcompute/servers/' + Server_Name +'/exceptions/patchOverride/' + TWave + '/failSafeDate'
System.log(Key_Content  +  '  - Key to Update')
Value_content = fException_Date
System.log(Value_content  +  '  - value to Update')

//add patchwave to root of the server for last time an exception was requested in etcd

Key_Content = 'unifiedcompute/servers/' + Server_Name +'/latestpatchexception'
System.log(Key_Content  +  '  - Key to Update')
Value_content = TWave
System.log(Value_content  +  '  - value to Update')
*/


/*
today = new Date
ExceptionDate =  new Date().setDate(today.getDate()+ 30 )
System.log(ExceptionDate)
var s = new Date(ExceptionDate).toLocaleDateString("en-US")
System.log(s)
check = s.split(" ")[0]
System.log(check + " - - - check")
var Month 
switch(check){
	case "December": 
		   Month = '12'
	       break;
	case "November": 
		   Month = '11'
	       break;
	case "October": 
		   Month = '10'
	       break;
	case "September": 
		   Month = '09'
	       break;
	case "August": 
		   Month = '08'
	       break;
	case "July": 
		   Month = '07'
	       break;
	case "June": 
		   Month = '06'
	       break;
	case "May": 
		   Month = '05'
	       break;
	case "April": 
		   Month = '04'
	       break;
	case "March": 
		   Month = '03'
	       break;
	case "February": 
		   Month = '02'
	       break;
	case "January": 
		   Month = '01'
	       break;
	}
Day = (s.split(" ")[1]).split(",")[0]
if(Day < 10){
		Day = 0 + Day
	}
Year = s.split(" ")[2]
fException_Date = Year+Month+Day
System.log(fException_Date)

Key_Content = 'unifiedcompute/servers/' + Server_Name +'/exceptions/patchOverride/' + TWave + '/failSafeDate'
System.log(Key_Content  +  '  - Key to Update')
Value_content = fException_Date
System.log(Value_content  +  '  - value to Update')
*/]]></script>
    <in-binding>
      <bind name="Server_Name" type="string" export-name="Server_Name"/>
      <bind name="Patch_Wave" type="string" export-name="Patch_Wave"/>
      <bind name="Get_wave_etcd" type="REST:RESTOperation" export-name="Get_wave_etcd"/>
    </in-binding>
    <out-binding>
      <bind name="Key_Content" type="Array/string" export-name="Key_Content"/>
      <bind name="Value_content" type="Array/string" export-name="Value_content"/>
    </out-binding>
    <position y="55.40909090909091" x="204.5"/>
  </workflow-item>
  <workflow-item name="item3" out-name="item0" type="task">
    <display-name><![CDATA[Scriptable task]]></display-name>
    <script encoded="false"><![CDATA[var PublishDate = new Array();
var getHosts = Server.findAllForType("REST:RESTOperation")
for(var i =0; i < getHosts.length ; i++){
	if(getHosts[i].name == "Unified Compute etcd GET"){
		var R = getHosts[i]
			System.log("name - " + R.name)
		}

}

System.log(Server_Name + " - Patching Execption is being applied for 30 days")
System.log(Patch_Wave + 'PATCH_Wave')
TWave = Patch_Wave.split("-")[3] + '-' + Patch_Wave.split("-")[4]
content = "unifiedcompute/servers/" +Server_Name+ "/exceptions/patchOverride/"+TWave+'/failSafeDate'
var inParamtersValues = [content];
EtcdRestOperation = R
var request = EtcdRestOperation.createRequest(inParamtersValues);
//set the request content type
request.contentType = "application\/json";
System.log("Request: " + request);
System.log("Request URL: " + request.fullUrl);
var response = request.execute();
//prepare output parameters
System.log("Response: " + response);
statusCode = response.statusCode;
statusCodeAttribute = statusCode;
System.log("Status code: " + statusCode);
contentLength = response.contentLength;
headers = response.getAllHeaders();
contentAsString = response.contentAsString;
System.log("Content as string: " + contentAsString);
var currentStatus = JSON.parse(contentAsString)
System.log(currentStatus.node.value)
System.log(currentStatus.node.key)


function eMail(Content,serverName,Sub1, to){
	var objEmail = new EmailMessage();
	objEmail.fromAddress = 'DL-SDDC@northwesternmutual.com'
	objEmail.fromName = 'DL-SDDC@northwesternmutual.com'
	objEmail.smtpHost = 'mail.nml.com'
	objEmail.smtpPort = 25
 	objEmail.toAddress = to
	objEmail.bccAddress = "DL-SERVERPATCHING@northwesternmutual.com"
	//objEmail.ccAddress = "dineshsolaiappan@northwesternmutual.com"
	objEmail.subject = (Sub1)
	objEmail.addMimePart(Content,"text/html; charset=UTF-8")
	objEmail.sendMessage()
}

if(statusCodeAttribute < 300){
		Content = 'Team,'+'<br />' + '<br />' + 'Exception for Patching has been successfully applied for the server ' + Server_Name + '<br />' + '<br />' + "Exception Due Date (yyyymmdd) : "+ currentStatus.node.value + '</br>' + '</br>' + 'Exception was requested by user - ' + BGEmail
		Sub1 = "Exception Successfully applied for Server - "+ Server_Name + ' Untill '+ currentStatus.node.value 
		
	}
var BgList = Server.findAllForType("vCACCAFE:VCACHost")[0]
BgName = BG_Name
System.log(BG_Name + '  -  BUG GRP ANE ')
var App_EmailDL_query = vCACCAFEEntitiesFinder.findBusinessGroups(BgList,BG_Name)
System.log(App_EmailDL_query)
var Business_group = App_EmailDL_query[0].administratorEmail
System.log("Business Group Email ID - " + Business_group)

		
to = Business_group
System.log(Business_group)
eMail(Content,Server_Name,Sub1,to)
]]></script>
    <in-binding>
      <bind name="ContentAsString" type="string" explicitly-not-bound="true"/>
      <bind name="Server_Name" type="string" export-name="Server_Name"/>
      <bind name="Patch_Wave" type="string" export-name="Patch_Wave"/>
      <bind name="BGEmail" type="string" export-name="BGEmail"/>
      <bind name="BG_Name" type="string" export-name="BG_Name"/>
    </in-binding>
    <out-binding/>
    <position y="55.40909090909091" x="504.5"/>
  </workflow-item>
  <workflow-item name="item2" out-name="item3" type="foreach">
    <display-name><![CDATA[Foreach (etcd - Add Key)]]></display-name>
    <in-binding>
      <bind name="key" type="Array/string" export-name="*Key_Content">
        <description><![CDATA[etcd key to update]]></description>
      </bind>
      <bind name="value" type="Array/string" export-name="*Value_content">
        <description><![CDATA[value of the key]]></description>
      </bind>
    </in-binding>
    <out-binding>
      <bind name="statusCode" type="Array/Number" export-name="*var2.statusCode"/>
      <bind name="contentLength" type="Array/Number" export-name="*var2.contentLength"/>
      <bind name="headers" type="Array/Properties" export-name="*var2.headers"/>
      <bind name="contentAsString" type="Array/String" export-name="*var2.contentAsString"/>
    </out-binding>
    <reference type="Workflow" id="1fa52ce3-f6c0-43f8-a28f-6790c2e93f13"/>
    <description><![CDATA[Autogenerated workflow.]]></description>
    <position y="55.90909090909091" x="365.0"/>
  </workflow-item>
  <presentation>
    <p-param name="Server_Name">
      <desc><![CDATA[Server_Name]]></desc>
    </p-param>
    <p-param name="Patch_Wave">
      <desc><![CDATA[Patch_Wave]]></desc>
    </p-param>
    <p-param name="BGEmail">
      <desc><![CDATA[BGEmail]]></desc>
    </p-param>
    <p-param name="BG_Name">
      <desc><![CDATA[BG_Name]]></desc>
    </p-param>
  </presentation>
</workflow>