<?xml version='1.0' encoding='UTF-8'?>
<workflow xmlns="http://vmware.com/vco/workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd" root-name="item1" object-name="workflow:name=generic" id="94dd8328-1db7-4b10-a12d-80235fdd93d8" version="0.0.9" api-version="6.0.0" allowed-operations="vfe" restartMode="1" resumeFromFailedMode="0">
  <display-name><![CDATA[checkPatchStatus_old_version]]></display-name>
  <position y="50.0" x="100.0"/>
  <input>
    <param name="server_name" type="string"/>
  </input>
  <output>
    <param name="WF_status" type="string"/>
  </output>
  <workflow-item name="item0" type="end" end-mode="0">
    <position y="45.40909090909091" x="384.5"/>
  </workflow-item>
  <workflow-item name="item1" out-name="item0" type="task">
    <display-name><![CDATA[Scriptable task]]></display-name>
    <script encoded="false"><![CDATA[function eMail(Content,vmName,Sub1, bgpdl){
	var objEmail = new EmailMessage();
	objEmail.fromAddress = 'ucp-vro@nm.nmfco.com'
	objEmail.fromName = 'dl-serverpatching@northwesternmutual.com'
	objEmail.smtpHost = 'hera.nml.com'
	objEmail.smtpPort = 25
	objEmail.toAddress = bgpdl
	objEmail.ccAddress = 'dl-serverpatching@northwesternmutual.com'
	objEmail.subject = (Sub1 + " - " + vmName)
	objEmail.addMimePart(Content,"text/html; charset=UTF-8")
	objEmail.sendMessage()
}
var date = null
//server_name = "ucp00003446"
var Content = "Post Patch check failed, Need Manual Check for the server" + server_name
var vmName = server_name
var Sub1 = "Need Manual Check for Server - Patching"
Snap = 'If you would like to rever the server to previous state before patching, please follow the below process'
S1 = "Login to vRA"
S2 = "Navigate to Items"
S3 = 'Select the machine and right side you will see option Revert to Snapshot'
S4 = "Select that Snapshot, That has Pre Patching in Name, Date Format on name (yyyymmdd-hhmm)"
S5 = "Please drop an email to dl-serverpatching@northwesternmutual.com for any information"
S6 = 'Note: '
S7 = "You will recive an another email from myucp@northwesternmutual.com, which only provides the status that your Submitted vRA request, Patching Status of the is what you see in the Email."


var getHosts = Server.findAllForType("REST:RESTHost")
for(var i =0; i < getHosts.length ; i++){
	if(getHosts[i].name == "ucp-etcd"){
		var R = getHosts[i]
		}
}
var serverUrl = "/unifiedcompute/servers/" + server_name + '?recursive=true' //+ '/state'
System.log(serverUrl)
var Connection = R.createRequest('GET',serverUrl)
Connection.contentType = "application/x-www-form-urlencoded"
var response = Connection.execute()
var valueq = JSON.parse(response.contentAsString)
temp_key = valueq.node.nodes
for each(Tkey in temp_key){
		if (Tkey.key.match('contactPDL')){
			System.log(" contactPDL - " + Tkey.value)
			bgpdl = Tkey.value
		}
}
var misec =  300000
var i = 0
date = null
got_data = "No"
do{
   System.log("Checking loop : " + i)
   var response = Connection.execute()
   var valueq = JSON.parse(response.contentAsString)
   temp_key = valueq.node.nodes
   for each(Tkey in temp_key){
	   if (Tkey.key.match('state') && Tkey.value == "active"){
   	   System.log("My Key Value ------ " + Tkey.value)
	   System.log(server_name + "Status changed to Active, Checking for Patch date")
	   for each(Tkey in temp_key){
			if (Tkey.key.match('lastPatched')){
				System.log(" Last patched value in ETCD - "+Tkey.value)
				date = Tkey.value
				i = 30
	         }
	     }
	  }
	}
	if(date == null || i < 30){
		System.log("Waiting for staus check to be completed")		
		System.sleep(misec)
	}
	i = i+1
}while(i < 24)

/*
//bgpdl = "dineshsolaiappan@northwesternmutual.com"
var misec =  0.2 * 60 * 60 * 1000
System.sleep(1200000)
for(var i =0 ; i < 3 ; i++){
	System.log("Am in checking loop - " + i)
	var response = Connection.execute()
	var valueq = JSON.parse(response.contentAsString)
	temp_key = valueq.node.nodes
	for each(Tkey in temp_key){
		if (Tkey.key.match('state') && Tkey.value == "active"){
			System.log(server_name + "Status changed to Active, Checking for Patch date")
			for each(Tkey in temp_key){
				if (Tkey.key.match('lastPatched')){
					System.log(" Last patched value in ETCD - "+Tkey.value)
					date = Tkey.value
		        }
		     }
		 }
	}	
System.sleep(misec)
}
*/	
var brk = false
if(date == null){
		System.log("No Last Patch date Found in ETCD")
		var Content = "Unable to find If the server was Patched Successfully a manual check for the server status is required or Patching Check timed out for the server " + server_name + '<br />' + '<br />'+Snap + '<br />' + '<br />'+ S1 + '<br />' + '<br />'+ S2 + '<br />' + '<br />'+S3+ '<br />' + '<br />'+ S4+ '<br />' + '<br />'+S5 
		//bg_pdl = 'dl-sddc@northwesternmutual.com'
		Sub1 = "Unable get Patching Status, Need Manual Check for Server"
		//bgpdl = 'dineshsolaiappan@northwesternmutual.com'
		eMail(Content,vmName, Sub1, bgpdl)
		brk = true
	}
if (brk != true){
	var patched = new Date();
	patched.setDate(date.substring(6,8))
	patched.setYear(date.substring(0,4))
	patched.setMonth((date.substring(4,6) -1))
	patched.setHours(date.substring(9,11))
	patched.setMinutes(date.substring(11,13))
	current  = new Date()
	System.log(current + 'Current Time')
	System.log(patched + 'patched Time from ETCD')
	date_compare = new Date()
	date_compare.setHours(-4)
	System.log(date_compare + '-12hrs to compare' )
	//bgpdl = 'dineshsolaiappan@northwesternmutual.com'
	if (/*patched < current &&*/ patched > date_compare ){
		System.log("Patched Successfully")
		var Content = "Post Patch check Successful, Server has been patched successfully - " + server_name + '<br />' + '<br />' +Snap + '<br />' + '<br />'+ S1 + '<br />' + '<br />'+ S2 + '<br />' + '<br />'+S3+ '<br />' + '<br />'+ S4+ '<br />' + '<br />'+S5
		var Sub1 = "Server has been patched successfully"
		WF_status = "Passed"
		eMail(Content,vmName, Sub1, bgpdl)
	}else{
		System.log("Patching Process failed")
		var Content = "Post Patch check failed, Need Manual Check for the server" + server_name +'<br />' + '<br />' + Snap + '<br />' + '<br />'+ S1 + '<br />' + '<br />'+ S2 + '<br />' + '<br />'+S3+ '<br />' + '<br />'+ S4+ '<br />' + '<br />'+S5 + '<br />' + '<br />' + S6 + '<br />' + '<br />' + S7
		var Sub1 = "Need Manual Check for Server - Patching"
		WF_status = "Failed"
		eMail(Content,vmName, Sub1, bgpdl)
	}
}
]]></script>
    <in-binding>
      <bind name="server_name" type="string" export-name="server_name"/>
    </in-binding>
    <out-binding>
      <bind name="WF_status" type="string" export-name="WF_status"/>
    </out-binding>
    <position y="55.40909090909091" x="204.5"/>
  </workflow-item>
  <presentation>
    <p-param name="server_name">
      <desc><![CDATA[server_name]]></desc>
    </p-param>
  </presentation>
</workflow>