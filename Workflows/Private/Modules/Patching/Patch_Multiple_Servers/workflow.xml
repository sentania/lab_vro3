<?xml version='1.0' encoding='UTF-8'?>
<workflow xmlns="http://vmware.com/vco/workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd" root-name="item1" object-name="workflow:name=generic" id="15d73ab3-9a31-4298-9f57-4c1a4ffe87bd" version="0.0.18" api-version="6.0.0" allowed-operations="vfe" restartMode="1" resumeFromFailedMode="0">
  <display-name><![CDATA[Patch_Multiple_Servers]]></display-name>
  <position y="50.0" x="100.0"/>
  <input>
    <param name="propertyValue" type="Array/string"/>
    <param name="propertyValue1" type="Array/string"/>
    <param name="p1" type="string"/>
    <param name="Server_List" type="Array/string"/>
    <param name="SName" type="string"/>
    <param name="Description" type="string"/>
    <param name="Snapshottodelete1" type="VC:VirtualMachineSnapshot"/>
  </input>
  <output>
    <param name="foreach_out_arg" type="Array/string"/>
    <param name="foreach_out_arg1" type="Array/string"/>
  </output>
  <attrib name="Servers" type="Array/string" read-only="false">
    <value encoded="n"><![CDATA[__NULL__]]></value>
  </attrib>
  <attrib name="naptime" type="number" read-only="false">
    <value encoded="n"><![CDATA[2100.0]]></value>
  </attrib>
  <attrib name="WF_status" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="Dummy_Exception" type="string" read-only="false">
    <value encoded="n"><![CDATA[I Need Admin Touch]]></value>
  </attrib>
  <workflow-item name="item0" type="end" end-mode="0">
    <position y="45.40909090909091" x="944.5"/>
  </workflow-item>
  <workflow-item name="item1" out-name="item2" type="task">
    <display-name><![CDATA[Scriptable task]]></display-name>
    <script encoded="false"><![CDATA[Servers = Server_List

]]></script>
    <in-binding>
      <bind name="Server_List" type="Array/string" export-name="Server_List"/>
    </in-binding>
    <out-binding>
      <bind name="Servers" type="Array/string" export-name="Servers"/>
    </out-binding>
    <position y="55.40909090909091" x="204.5"/>
  </workflow-item>
  <workflow-item name="item3" prototype-id="sleep" out-name="item6" content-mode="x" type="task">
    <display-name><![CDATA[Sleep]]></display-name>
    <script encoded="false"><![CDATA[//Auto-generated script
if ( sleepTime != null )  {
	System.sleep(sleepTime*1000);
}
else  {
	throw "'sleepTime' is NULL";
}
]]></script>
    <in-binding>
      <bind name="sleepTime" type="number" export-name="naptime">
        <description><![CDATA[Time to sleep in seconds]]></description>
      </bind>
    </in-binding>
    <out-binding/>
    <description><![CDATA[Sleep a given number of seconds]]></description>
    <position y="55.40909090909091" x="484.5"/>
  </workflow-item>
  <workflow-item name="item4" out-name="item0" type="custom-condition" alt-out-name="item5">
    <display-name><![CDATA[Custom decision]]></display-name>
    <script encoded="false"><![CDATA[if (WF_status == "Passed"){
		System.log("WorkFlow Successfully Completed")
		return true
	}else{
		System.log("WorkFlow Failed")
		return false
	}]]></script>
    <in-binding>
      <bind name="WF_status" type="string" export-name="WF_status"/>
    </in-binding>
    <position y="45.40909090909091" x="764.5"/>
  </workflow-item>
  <workflow-item name="item5" business-status="I Need Admin Touch" throw-bind-name="Dummy_Exception" type="end" end-mode="1">
    <position y="109.04545454545453" x="804.5"/>
  </workflow-item>
  <workflow-item name="item6" out-name="item4" type="task">
    <display-name><![CDATA[Scriptable task]]></display-name>
    <script encoded="false"><![CDATA[var getHosts = Server.findAllForType("REST:RESTHost")
for(var i =0; i < getHosts.length ; i++){
	if(getHosts[i].name == "ucp-etcd"){
		var R = getHosts[i]
		}
}
function eMail(Content,vmName,Sub1, bgpdl){
	var objEmail = new EmailMessage();
	objEmail.fromAddress = 'ucp-vro@nm.nmfco.com'
	objEmail.fromName = 'dl-serverpatching@northwesternmutual.com'
	objEmail.smtpHost = 'hera.nml.com'
	objEmail.smtpPort = 25
	objEmail.toAddress = bgpdl
	objEmail.ccAddress = 'dl-serverpatching@northwesternmutual.com'
	objEmail.subject = (Sub1 + " - " + vmName)
	objEmail.addMimePart(Content,"text/html; charset=UTF-8")
	objEmail.sendMessage()
}

var Sub1 = "Need Manual Check for Server - Patching"
Snap = 'If you would like to rever the server to previous state before patching, please follow the below process'
S1 = "Login to vRA"
S2 = "Navigate to Items"
S3 = 'Select the machine and right side you will see option Revert to Snapshot'
S4 = "Select that Snapshot, That has Pre Patching in Name, Date Format on name (yyyymmdd-hhmm)"
S5 = "Please drop an email to dl-serverpatching@northwesternmutual.com for any information"
S6 = "Note: "
S7 = "You will recive an another email from myucp@northwesternmutual.com, which only states that your request from vRA has been successfully addressed, which does not change the patching status of the server in the email"
var i = 0
one_server_state = "NA"
do{
		for (var k = 0; k < Server_List.length; k++){
		server_name = Server_List[k]
		var date = null
		var vmName = server_name
		var serverUrl = "/unifiedcompute/servers/" + server_name + '?recursive=true' //+ '/state'
		System.log(serverUrl)
		var Connection = R.createRequest('GET',serverUrl)
		Connection.contentType = "application/x-www-form-urlencoded"
		var response = Connection.execute()
		var valueq = JSON.parse(response.contentAsString)
		temp_key = valueq.node.nodes
		for each(Tkey in temp_key){
				if (Tkey.key.match('contactPDL')){
					System.log(" contactPDL - " + Tkey.value)
					bgpdl = Tkey.value
				}
		}
		date = null
		got_data = "No"
		check_complete = "No"
		var response = Connection.execute()
		var valueq = JSON.parse(response.contentAsString)
		temp_key = valueq.node.nodes
		for each(Tkey in temp_key){
			if (Tkey.key.match('state') && Tkey.value == "active"){
			System.log("My Key Value ------ " + Tkey.value)
				System.log(server_name + " - Status changed to Active , Checking for Patch date")
				for each(Tkey in temp_key){
					if (Tkey.key.match('lastPatched')){
						System.log(" Last patched value in ETCD - "+Tkey.value)
						date = Tkey.value
						check_complete = "Yes"
						Server_List.splice(k, 1)
						System.log ( "My Current List Of Server to Check ============== "+ Server_List)
			        }
			     }
			  }
			}
		if (check_complete == "Yes"){
			var patched = new Date();
			patched.setDate(date.substring(6,8))
			patched.setYear(date.substring(0,4))
			patched.setMonth((date.substring(4,6) -1))
			patched.setHours(date.substring(9,11))
			patched.setMinutes(date.substring(11,13))
			current  = new Date()
			System.log(current + 'Current Time')
			System.log(patched + 'patched Time from ETCD')
			date_compare = new Date()
			date_compare.setHours(-4)
			System.log(date_compare + '-12hrs to compare' )
			//bgpdl = 'dineshsolaiappan@northwesternmutual.com'
			
			if (/*patched < current &&*/ patched > date_compare ){
				System.log("Patched Successfully")
				var Content = "Post Patch check Successful, Server has been patched successfully - " + server_name + '<br />' + '<br />' +Snap + '<br />' + '<br />'+ S1 + '<br />' + '<br />'+ S2 + '<br />' + '<br />'+S3+ '<br />' + '<br />'+ S4+ '<br />' + '<br />'+S5
				var Sub1 = "Server has been patched successfully"
				eMail(Content,vmName, Sub1, bgpdl)
			}else{
				System.log("Patching Process failed")
				var Content = "Post Patch check failed, Need Manual Check for the server" + server_name +'<br />' + '<br />' + Snap + '<br />' + '<br />'+ S1 + '<br />' + '<br />'+ S2 + '<br />' + '<br />'+S3+ '<br />' + '<br />'+ S4+ '<br />' + '<br />'+S5 + '<br />' + '<br />' + S6 + '<br />' + '<br />' + S7
				var Sub1 = "Need Manual Check for Server - Patching"
				one_server_state = "Failed"
				eMail(Content,vmName, Sub1, bgpdl)
			}
		 }
		if((date == null || date == 'error') && i >= 30){
				System.log("No Last Patch date Found in ETCD")
				var Content = "Unable to find If the server was Patched Successfully a manual check for the server status is required or Patching Check timed out for the server " + server_name + '<br />' + '<br />'+Snap + '<br />' + '<br />'+ S1 + '<br />' + '<br />'+ S2 + '<br />' + '<br />'+S3+ '<br />' + '<br />'+ S4+ '<br />' + '<br />'+S5+ '<br />' + '<br />' + S6 + '<br />' + '<br />' + S7 
				//bg_pdl = 'dl-sddc@northwesternmutual.com'
				Sub1 = "Unable get Patching Status, Need Manual Check for Server"
				//bgpdl = 'dineshsolaiappan@northwesternmutual.com'
				eMail(Content,vmName, Sub1, bgpdl)
				brk = true
			} 
  }
	if(k == Server_List.length){
		System.log("Value of I is --------- " + i)
		i = i + 1
		System.log("Taking Short Nap")
		System.sleep(300000) 
	}
}while(i < 31 ){
	System.log("Done with Iteration")
}

if (one_server_state == 'Failed'){
	WF_status = "Failed"
}else{
	WF_status = "Passed"
}


//HP OO MM OFF
var workflowToLaunch = Server.getWorkflowWithId("64e71ff3-e825-4fb2-abd3-ce8774f535ca");
if (workflowToLaunch == null) {
	throw "Workflow not found";
}

for (var k = 0; k < Server_List.length; k++){
		server_name = Server_List[k]
		var workflowParameters = new Properties();
		workflowParameters.put("hostName",server_name);
		workflowParameters.put("customProperties",customProperties);
		workflowParameters.put("hpooMode",off);
		var wfToken = workflowToLaunch.execute(workflowParameters);
}

]]></script>
    <in-binding>
      <bind name="Server_List" type="Array/string" export-name="Server_List"/>
    </in-binding>
    <out-binding>
      <bind name="WF_status" type="string" export-name="WF_status"/>
    </out-binding>
    <position y="55.40909090909091" x="624.5"/>
  </workflow-item>
  <workflow-item name="item2" out-name="item3" type="foreach">
    <display-name><![CDATA[Foreach (Patch_Multipe_Server_Subflow_1)]]></display-name>
    <in-binding>
      <bind name="VMName" type="Array/string" export-name="*Servers"/>
      <bind name="SName" type="string" export-name="SName"/>
      <bind name="Description" type="string" export-name="Description"/>
      <bind name="Snapshottodelete1" type="VC:VirtualMachineSnapshot" export-name="Snapshottodelete1"/>
    </in-binding>
    <out-binding/>
    <reference type="Workflow" id="be05780f-2ab1-413e-8463-1773ac86e8ec"/>
    <position y="55.40909090909091" x="344.5"/>
  </workflow-item>
  <presentation>
    <p-param name="propertyValue">
      <desc><![CDATA[propertyValue]]></desc>
    </p-param>
    <p-param name="propertyValue1">
      <desc><![CDATA[propertyValue1]]></desc>
    </p-param>
    <p-param name="p1">
      <desc><![CDATA[p1]]></desc>
    </p-param>
    <p-param name="Server_List">
      <desc><![CDATA[Server_List]]></desc>
    </p-param>
    <p-param name="SName">
      <desc><![CDATA[SName]]></desc>
    </p-param>
    <p-param name="Description">
      <desc><![CDATA[Description]]></desc>
    </p-param>
    <p-param name="Snapshottodelete1">
      <desc><![CDATA[Snapshottodelete1]]></desc>
    </p-param>
  </presentation>
</workflow>