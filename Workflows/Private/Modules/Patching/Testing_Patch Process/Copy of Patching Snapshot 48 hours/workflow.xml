<?xml version='1.0' encoding='UTF-8'?>
<workflow xmlns="http://vmware.com/vco/workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd" root-name="item1" object-name="workflow:name=generic" id="01225e07-8472-467e-b853-ef2545824999" version="0.0.25" api-version="6.0.0" allowed-operations="evf" restartMode="1" resumeFromFailedMode="0">
  <display-name><![CDATA[Copy of Patching Snapshot 48 hours]]></display-name>
  <position y="50.0" x="100.0"/>
  <input>
    <param name="VMName" type="string"/>
    <param name="SName" type="string"/>
    <param name="Description" type="string"/>
    <param name="Snapshottodelete1" type="VC:VirtualMachineSnapshot">
      <description><![CDATA[Snapshot Created in previous task]]></description>
    </param>
    <param name="workflowScheduleDate" type="Date">
      <description><![CDATA[Schedule execution date]]></description>
    </param>
    <param name="hostName" type="string"/>
    <param name="customProperties" type="Properties"/>
  </input>
  <output>
    <param name="actionResult" type="VC:Task"/>
    <param name="actionResult1" type="VC:Task"/>
    <param name="scheduledTask" type="Task">
      <description><![CDATA[Scheduled workflow task]]></description>
    </param>
  </output>
  <attrib name="Snapshottodelete" type="VC:VirtualMachineSnapshot" read-only="false">
    <value encoded="n"><![CDATA[__NULL__]]></value>
  </attrib>
  <attrib name="Datetodelete" type="Date" read-only="false">
    <value encoded="n"><![CDATA[__NULL__]]></value>
  </attrib>
  <attrib name="timetocheckpatch" type="Date" read-only="false">
    <value encoded="n"><![CDATA[__NULL__]]></value>
  </attrib>
  <attrib name="sleepTime" type="number" read-only="false">
    <value encoded="n"><![CDATA[1800.0]]></value>
  </attrib>
  <attrib name="hpooModeON" type="string" read-only="false">
    <value encoded="n"><![CDATA[on]]></value>
  </attrib>
  <attrib name="hpooModeOFF" type="string" read-only="false">
    <value encoded="n"><![CDATA[off]]></value>
  </attrib>
  <attrib name="WF_status" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="Dummy_exception" type="string" read-only="false">
    <value encoded="n"><![CDATA[Need Admin Blessing Touch]]></value>
  </attrib>
  <workflow-item name="item0" type="end" end-mode="0">
    <position y="45.40909090909091" x="1284.5"/>
  </workflow-item>
  <workflow-item name="item1" out-name="item2" type="task">
    <display-name><![CDATA[Scriptable task]]></display-name>
    <script encoded="false"><![CDATA[function eMail(Content,vmName,Sub1, bgpdl){
	var objEmail = new EmailMessage();
	objEmail.fromAddress = 'ucp-vro@nm.nmfco.com'
	objEmail.fromName = 'DL-SDDC@northwesternmutual.com'
	objEmail.smtpHost = 'hera.nml.com'
	objEmail.smtpPort = 25
	objEmail.toAddress = bgpdl
	objEmail.ccAddress = 'DL-SDDC@northwesternmutual.com'
	objEmail.subject = Sub1
	objEmail.addMimePart(Content,"text/html; charset=UTF-8")
	objEmail.sendMessage()
}

// Assign and Declare Variable
System.log('Input VirtualMachine Name - ' + VMName)
var Description = "Snapshot Taken for Patching"
var SnapshotName = "Patching - "+ VMName
var memory = false
var quiesce = false
var date = new Date();
var SnapshotName = 'Pre-Patching-'+ (System.formatDate(date,'yyyMMdd-HHmm'));
var Schedule = Server.getWorkflowWithId("3689db6f-f9b3-4048-80cd-7dd2834d1d90"); // schedule a workflow with given ID

// calculate time to delete patching snapshot
var scheduleDate = new Date();
var Scheduleafter = 2 * 24 * 60 * 60 * 1000; // 2 days in milliseconds
scheduleDate.setTime(scheduleDate.getTime() + Scheduleafter);
Datetodelete = scheduleDate

/*
// Time to check for Patching status (40 Minutes)
var scheduletime = new Date();
timetocheck = 0.5* 60 * 60 * 1000
scheduletime.setTime(scheduletime.getTime() + timetocheck);
timetocheckpatch = scheduletime
*/
// Getting all VM Details from vCenter
var VirtualMachinelist = VcPlugin.getAllVirtualMachines();
for each(Vmlist in VirtualMachinelist){
		if(VMName == Vmlist.name){
			System.log("Found Match")
			var VM = Vmlist
			Guest_OS = VM.guest.guestFamily
			System.log("Guest OS - " + Guest_OS)
			}
	}
vmName = VMName	

// collection of Rest Host and filter ETCD Rest host
var getHosts = Server.findAllForType("REST:RESTHost")
for(var i =0; i < getHosts.length ; i++){
	if(getHosts[i].name == "ucp-etcd"){
		var R = getHosts[i]
		}
}
var suburl_pdl = "/unifiedcompute/servers/" + VMName + "/contactPDL" 
var Connection = R.createRequest('GET',suburl_pdl)
System.log(suburl_pdl)
System.log(Connection)
Connection.contentType = "application/x-www-form-urlencoded"
var response = Connection.execute()
var valueq = JSON.parse(response.contentAsString)
notify_bg = valueq.node.value
System.log(notify_bg)

// Finding the match	
if (VM == null || VM == "") {
	Content = "Unable to find the server in vCenter - " + VMName + ', Not continuing further for Patching. Need user to check'
	Sub1 = "Server not found in vCenter - " + VMName
	bgpdl = "dl-sddc@northwesternmutual.com" 
//	bgpdl = "dineshsolaiappan@northwesternmutual.com" 
	eMail(Content,vmName,Sub1, bgpdl)
	throw "Error: Server Name cannot be null";
}
	
//Initiating the Snapshot Process for the VM
try{
		var CreateSnapshot = VM.createSnapshot_Task(SnapshotName, Description, memory, quiesce);
		System.log("Task ID" + CreateSnapshot.moref.value)
		System.log("Task Name" + CreateSnapshot.info.name)
		System.log("Task Description ID" + CreateSnapshot.info.descriptionId)
		System.log("Task VM Name" + CreateSnapshot.info.entityName)
		System.log("Task State" + CreateSnapshot.info.state)
	}catch(error){
		Content = "Unable to Initiate Snapshot for - " + VMName + ', Not continuing further for Patching. Need user to check'
		Sub1 = "Unable to initiate Snapshot for Patching - " + VMName
		//bgpdl = "dl-sddc@northwesternmutual.com" 
		//bgpdl = "dineshsolaiappan@northwesternmutual.com" 
		eMail(Content,vmName,Sub1, notify_bg)
		throw "Error : Unable to initiate the snapshot";
	}
//Checking Snapshot Completion
var check = false
System.sleep(120000)
var sdktm = VM.sdkConnection.taskManager;
for each(task in sdktm.recentTask){
		if(task.id == CreateSnapshot.moref.value && task.info.state.value == "success"){
		System.log("Snapshot Successfully Completed for VM - " + VMName )
		check = true
	}
}

if(check != true){
		Content = "Unable to Check Snapshot completion task for - " + VMName + ', Not continuing further for Patching. Need user to check. Snapshot Initiated in vCenter but could validate the task.'
		Sub1 = "Unable to Check for Snapshot completion for Patching - " + VMName
	//	bgpdl = "dl-sddc@northwesternmutual.com" 
	//	bgpdl = "dineshsolaiappan@northwesternmutual.com" 
		eMail(Content,vmName,Sub1, notify_bg)
	}
// Scheduling Snapshot for Deletion after 2 days

var Snap = VM.sdkConnection.allVirtualMachineSnapshots
var actionResult =  System.getModule("com.vmware.library.vc.vm.snapshot").getAllSnapshotsOfVM(VM)
for each(sy in actionResult){
		System.log(sy.name)
		System.log(sy.id)
		if(sy.name == SnapshotName){
				Snapshottodelete = sy
				System.log("Deletion of Snapshot for Virual Machine" + VMName + "is scheduled on" + scheduleDate)
		}
	}

		
// Build the url for Server that needs to be updated in ETCD 
var suburl = "/unifiedcompute/servers/" + VMName + "/state" 
if(Guest_OS == "windowsGuest"){
	var Connection = R.createRequest('PUT',suburl,'value=needsPatchingW')
	System.log("Updating ETCD for WINDOWS Guest OS")
}else if (Guest_OS == "linuxGuest"){
	var Connection = R.createRequest('PUT',suburl,'value=needsPatchingL')
	System.log("Updating ETCD for Linux Guest OS")
}
System.log(suburl)
System.log(Connection)
Connection.contentType = "application/x-www-form-urlencoded"
var response = Connection.execute()
System.log(response.contentAsString)
System.log(response.statusCode)
if(response.statusCode == 200){
		System.log("Update Successful on ETCD for VM -"+ VMName)
		Content = VMName + " is in Patching process, Server will be rebooted during patching, Please watch out for an completion email and do any necessary checkouts"
		Sub1 = VMName + " is in Patching Process"
		//bgpdl = notify_bg 
		//bgpdl = "dineshsolaiappan@northwesternmutual.com" 
		eMail(Content,vmName,Sub1, notify_bg)
   }else{
	    Content = "Unable to Update ETCD for Patching - " + VMName + ', Snapshot Processing completed at this stage but could not update ETCD for further action.'
		Sub1 = "Unable to Update ETCD for Patching  - " + VMName
	//	bgpdl = "dl-sddc@northwesternmutual.com" 
	//	bgpdl = "dineshsolaiappan@northwesternmutual.com" 
		eMail(Content,vmName,Sub1, notify_bg)
   }
]]></script>
    <in-binding>
      <bind name="VMName" type="string" export-name="VMName"/>
    </in-binding>
    <out-binding>
      <bind name="Snapshottodelete" type="VC:VirtualMachineSnapshot" export-name="Snapshottodelete"/>
      <bind name="Datetodelete" type="Date" export-name="Datetodelete"/>
      <bind name="timetocheckpatch" type="Date" export-name="timetocheckpatch"/>
    </out-binding>
    <position y="55.40909090909091" x="244.5"/>
  </workflow-item>
  <workflow-item name="item2" out-name="item3" type="task" launched-workflow-id="d95fd949-a53d-48b3-8766-7c07a37ebf39">
    <display-name><![CDATA[Remove Snapshot after patching]]></display-name>
    <script encoded="false"><![CDATA[//Auto generated script, cannot be modified !
var workflowToLaunch = Server.getWorkflowWithId("d95fd949-a53d-48b3-8766-7c07a37ebf39");
if (workflowToLaunch == null) {
	throw "Workflow not found";
}

var workflowParameters = new Properties();
workflowParameters.put("snapshot",snapshot);
var scheduledTask = workflowToLaunch.schedule(workflowParameters,workflowScheduleDate);]]></script>
    <in-binding>
      <bind name="snapshot" type="VC:VirtualMachineSnapshot" export-name="Snapshottodelete">
        <description><![CDATA[Snapshot Created in previous task]]></description>
      </bind>
      <bind name="workflowScheduleDate" type="Date" export-name="Datetodelete">
        <description><![CDATA[Schedule execution date]]></description>
      </bind>
    </in-binding>
    <out-binding>
      <bind name="scheduledTask" type="Task">
        <description><![CDATA[Scheduled workflow task]]></description>
      </bind>
    </out-binding>
    <position y="55.40909090909091" x="404.5"/>
  </workflow-item>
  <workflow-item name="item3" out-name="item5" type="link" linked-workflow-id="64e71ff3-e825-4fb2-abd3-ce8774f535ca">
    <display-name><![CDATA[hpoo - maintenance mode]]></display-name>
    <in-binding>
      <bind name="hostName" type="string" export-name="VMName"/>
      <bind name="customProperties" type="Properties" export-name="customProperties"/>
      <bind name="hpooMode" type="string" export-name="hpooModeON"/>
    </in-binding>
    <out-binding/>
    <position y="55.40909090909091" x="544.5"/>
  </workflow-item>
  <workflow-item name="item5" prototype-id="sleep" out-name="item4" content-mode="x" type="task">
    <display-name><![CDATA[Sleep]]></display-name>
    <script encoded="false"><![CDATA[//Auto-generated script
if ( sleepTime != null )  {
	System.sleep(sleepTime*1000);
}
else  {
	throw "'sleepTime' is NULL";
}
]]></script>
    <in-binding>
      <bind name="sleepTime" type="number" export-name="sleepTime">
        <description><![CDATA[Time to sleep in seconds]]></description>
      </bind>
    </in-binding>
    <out-binding/>
    <description><![CDATA[Sleep a given number of seconds]]></description>
    <position y="55.40909090909091" x="684.5"/>
  </workflow-item>
  <workflow-item name="item6" out-name="item7" type="link" linked-workflow-id="64e71ff3-e825-4fb2-abd3-ce8774f535ca">
    <display-name><![CDATA[hpoo - maintenance mode]]></display-name>
    <in-binding>
      <bind name="hostName" type="string" export-name="hostName"/>
      <bind name="customProperties" type="Properties" export-name="customProperties"/>
      <bind name="hpooMode" type="string" export-name="hpooModeOFF"/>
    </in-binding>
    <out-binding/>
    <position y="55.40909090909091" x="964.5"/>
  </workflow-item>
  <workflow-item name="item4" out-name="item6" type="link" linked-workflow-id="6184c18d-2af0-4fbf-ab79-1ca84a417240">
    <display-name><![CDATA[Copy of checkPatchStatus]]></display-name>
    <in-binding>
      <bind name="server_name" type="string" export-name="VMName"/>
    </in-binding>
    <out-binding>
      <bind name="WF_status" type="string" export-name="WF_status"/>
    </out-binding>
    <position y="55.40909090909091" x="824.5"/>
  </workflow-item>
  <workflow-item name="item7" out-name="item0" type="custom-condition" alt-out-name="item8">
    <display-name><![CDATA[Custom decision]]></display-name>
    <script encoded="false"><![CDATA[if (WF_status == "Passed"){
		System.log("WorkFlow Successfully Completed")
		return true
	}else{
		return false
	}]]></script>
    <in-binding>
      <bind name="WF_status" type="string" export-name="WF_status"/>
    </in-binding>
    <position y="45.40909090909091" x="1104.5"/>
  </workflow-item>
  <workflow-item name="item8" business-status="Patching Process check failed and need a blesing touch from Admin" throw-bind-name="Dummy_exception" type="end" end-mode="1">
    <position y="109.04545454545453" x="1144.5"/>
  </workflow-item>
  <presentation>
    <p-param name="VMName">
      <desc><![CDATA[VMName]]></desc>
    </p-param>
    <p-param name="SName">
      <desc><![CDATA[SName]]></desc>
    </p-param>
    <p-param name="Description">
      <desc><![CDATA[Description]]></desc>
    </p-param>
    <p-param name="Snapshottodelete1">
      <desc><![CDATA[Snapshot Created in previous task]]></desc>
    </p-param>
    <p-param name="workflowScheduleDate">
      <desc><![CDATA[Schedule execution date]]></desc>
    </p-param>
    <p-param name="hostName">
      <desc><![CDATA[hostName]]></desc>
    </p-param>
    <p-param name="customProperties">
      <desc><![CDATA[customProperties]]></desc>
    </p-param>
  </presentation>
</workflow>