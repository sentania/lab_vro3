<?xml version='1.0' encoding='UTF-8'?>
<workflow xmlns="http://vmware.com/vco/workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd" root-name="item4" object-name="workflow:name=generic" id="dbeed4a3-789f-42b6-ab55-03653b8ee88d" version="0.0.17" api-version="6.0.0" allowed-operations="evf" restartMode="1" resumeFromFailedMode="0">
  <display-name><![CDATA[Install Netbackup Agent on Linux]]></display-name>
  <description><![CDATA[Autogenerated workflow.]]></description>
  <position y="50.0" x="160.0"/>
  <input>
    <param name="serverName" type="string"/>
    <param name="BgEmail" type="string"/>
  </input>
  <output>
    <param name="statusCode" type="Number">
      <description><![CDATA[Response status code]]></description>
    </param>
    <param name="contentLength" type="Number">
      <description><![CDATA[Response content length]]></description>
    </param>
    <param name="headers" type="Properties">
      <description><![CDATA[Response headers]]></description>
    </param>
  </output>
  <attrib name="errorCode" type="String" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="restOperation" type="REST:RESTOperation" read-only="false">
    <value encoded="n"><![CDATA[dunes://service.dunes.ch/CustomSDKObject?id='d0dee419-eef6-4aa8-bf03-766daa3743ca:ab2249dc-43af-45f2-9e5b-6e547a47187a'&dunesName='REST:RESTOperation']]></value>
  </attrib>
  <attrib name="statusCodeAttribute" type="Number" read-only="false"/>
  <attrib name="jobid" type="String" read-only="false">
    <value encoded="n"><![CDATA[77]]></value>
    <description><![CDATA[jobid]]></description>
  </attrib>
  <attrib name="content" type="String" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
    <description><![CDATA[content]]></description>
  </attrib>
  <attrib name="CheckJobStatus" type="REST:RESTOperation" read-only="false">
    <value encoded="n"><![CDATA[dunes://service.dunes.ch/CustomSDKObject?id='d0dee419-eef6-4aa8-bf03-766daa3743ca:6cfc9e9f-b40e-4467-916f-e4712049eb01'&dunesName='REST:RESTOperation']]></value>
  </attrib>
  <attrib name="contentAsString" type="String" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
    <description><![CDATA[Response content as string]]></description>
  </attrib>
  <workflow-item name="item0" type="end" end-mode="0">
    <position y="363.59090909090907" x="165.0"/>
  </workflow-item>
  <workflow-item name="item1" throw-bind-name="errorCode" type="end" end-mode="1">
    <position y="236.3181818181818" x="265.0"/>
  </workflow-item>
  <workflow-item name="item2" out-name="item5" throw-bind-name="errorCode" type="custom-condition" alt-out-name="item1">
    <display-name><![CDATA[Custom Condition]]></display-name>
    <script encoded="false"><![CDATA[if ( statusCodeAttribute >= 400 ) {
    throw "HTTPError: status code: " + statusCodeAttribute;
} else {
    return true;
}]]></script>
    <in-binding>
      <bind name="statusCodeAttribute" type="Number" export-name="statusCodeAttribute"/>
    </in-binding>
    <position y="236.3181818181818" x="125.0"/>
  </workflow-item>
  <workflow-item name="item3" out-name="item2" catch-name="item1" throw-bind-name="errorCode" type="task">
    <display-name><![CDATA[Scripting]]></display-name>
    <script encoded="false"><![CDATA[//prepare request
//Do not edit 
var inParamtersValues = [jobid];
var request = restOperation.createRequest(inParamtersValues, content);


//set the request content type
request.contentType = "application\/json";
System.log("Request: " + request);
System.log("Request URL: " + request.fullUrl);

//Customize the request here
//request.setHeader("headerName", "headerValue");

//execute request
//Do not edit 
var response = request.execute();
//prepare output parameters
System.log("Response: " + response);
statusCode = response.statusCode;
statusCodeAttribute = statusCode;
System.log("Status code: " + statusCode);
contentLength = response.contentLength;
headers = response.getAllHeaders();
contentAsString = response.contentAsString;
System.log("Content as string: " + contentAsString);




]]></script>
    <in-binding>
      <bind name="jobid" type="String" export-name="jobid"/>
      <bind name="content" type="String" export-name="content"/>
      <bind name="restOperation" type="REST:RESTOperation" export-name="restOperation"/>
      <bind name="statusCodeAttribute" type="Number" export-name="statusCodeAttribute"/>
    </in-binding>
    <out-binding>
      <bind name="statusCode" type="Number" export-name="statusCode"/>
      <bind name="contentLength" type="Number" export-name="contentLength"/>
      <bind name="headers" type="Properties" export-name="headers"/>
      <bind name="contentAsString" type="String" export-name="contentAsString"/>
      <bind name="statusCodeAttribute" type="Number" export-name="statusCodeAttribute"/>
    </out-binding>
    <position y="182.68181818181816" x="125.0"/>
  </workflow-item>
  <workflow-item name="item4" out-name="item3" type="task">
    <display-name><![CDATA[Set Variables]]></display-name>
    <script encoded="false"><![CDATA[// Determine Job ID by the OS input.
/*
if (os.search("Windows") > -1) {
	jobid = "17";
} else {
	jobid = "16";
}
*/
// Job ID
jobid = "77"

// Lowercase server name and add to content json
serverName = serverName.toLowerCase();

content = '{ "limit": "*'+serverName+ '*"}'
System.log("Content to be passed : " +  content)
]]></script>
    <in-binding>
      <bind name="serverName" type="string" export-name="serverName"/>
      <bind name="BgEmail" type="string" export-name="BgEmail"/>
    </in-binding>
    <out-binding>
      <bind name="jobid" type="String" export-name="jobid"/>
      <bind name="content" type="String" export-name="content"/>
    </out-binding>
    <position y="119.04545454545453" x="125.0"/>
  </workflow-item>
  <workflow-item name="item5" out-name="item0" type="task">
    <display-name><![CDATA[Scriptable task]]></display-name>
    <script encoded="false"><![CDATA[function eMail(Content,serverName,Sub1, to){
	var objEmail = new EmailMessage();
	objEmail.fromAddress = 'DL-SDDC@northwesternmutual.com'
	objEmail.fromName = 'DL-SDDC@northwesternmutual.com'
	objEmail.smtpHost = 'hera.nml.com'
	objEmail.smtpPort = 25
 	objEmail.toAddress = to
	objEmail.ccAddress = "IO-MS-BACKUP@northwesternmutual.com"
	objEmail.bccAddress = "DL-SDDC@northwesternmutual.com"
objEmail.bccAddress = "dineshsolaiappan@northwesternmutual.com"
		objEmail.subject = (Sub1 + "- " + serverName)
	objEmail.addMimePart(Content,"text/html; charset=UTF-8")
	objEmail.sendMessage()
}

var obj = JSON.parse(contentAsString);
jobid_tocheck = obj.job

System.log(jobid_tocheck  + ' - Parsed Job ID')
function checkjob(id) {
	var inParamtersValues = [id];
	var request = CheckJobStatus.createRequest(inParamtersValues, null);
	request.contentType = "";
	System.log("Request: " + request);
	System.log("Request URL: " + request.fullUrl);
	var response = request.execute();
	System.log("Response: " + response);
	statusCode = response.statusCode;
	statusCodeAttribute = statusCode;
	System.log("Status code: " + statusCode);
	contentLength = response.contentLength;
	headers = response.getAllHeaders();
	contentasString = response.contentAsString;
	//System.log("Content as string: " + contentasString);
	return contentasString
	//var currentStatus = JSON.parse(contentasString)
    //return currentStatus
	//var Status = currentStatus.status
	//return Status
}
amiFailed = ''
for (var i =0 ; i <= 10 ; i++){
System.sleep(5 * 60 * 1000)
System.log('Loop #' + i )
	var jobstatusT = checkjob(jobid_tocheck)
	jobstatus = JSON.parse(jobstatusT)
	System.log(jobstatus.status + 'Current Job Status')
	if (jobstatus.status == 'failed'){
	   Sub1 = 'Netbackup Agent install failed on the server '
	   Content = "Netbackup Agent installation failed on the server "+ serverName+ ", Please try resubmitting the request or contact DL-SDDC@northwesternmutual.com for more details."
	   amiFailed = true
	   break
   }else if (jobstatus.status == 'successful'){
		Sub1 = 'Netbackup Agent install has been successfully install on the server '
	    Content = "Netbackup Agent installation has been successfully installed on the server "+ serverName+ ", Please contact Netbackup team for further assistance."
	    break
   }else if (i == 10 && jobstatus.status == 'running' ){
		Sub1 = 'Netbackup Agent install has ran in time our error '
	    Content = "Netbackup Agent installation time out for the server "+ serverName+ ", Please try resubmitting the request or contact DL-SDDC@northwesternmutual.com for more details."
   }
}

if(amiFailed != true){
	var sdkConnections = VcPlugin.allSdkConnections;
	for(var i in sdkConnections){
		   var hostvc = sdkConnections[i];
	}
	var VM = hostvc.getAllVirtualMachines(null, "xpath:contains(name, '" + serverName + "')");
	System.log(VM[0].name)
	bkup = 'AdvBackup' 
	Value = 'NO'
	System.getModule("com.vmware.library.vc.customattribute").setOrCreateCustomField(VM[0],bkup,Value);
	actionResult = System.getModule("com.vmware.library.vc.customattribute").getCustomField(VM[0],bkup);
	System.log('Advanced Backup Attribute Value - ' + actionResult)
}
/*if(amiFailed == true){
	System.log("On Job Failed Loop")
	jobid_tocheck = '315695/stdout'
	var jobstatus = checkjob(jobid_tocheck)
	//System.log('Job Output Message As Below' + jobstatus)
     System.log(jobstatus.split(': FAILED! =>')[0])
}

*/
to = BgEmail
//to = "dineshsolaiappan@northwesternmutual.com"
eMail(Content,serverName,Sub1,to)]]></script>
    <in-binding>
      <bind name="CheckJobStatus" type="REST:RESTOperation" export-name="CheckJobStatus"/>
      <bind name="contentAsString" type="String" export-name="contentAsString"/>
      <bind name="serverName" type="string" export-name="serverName"/>
      <bind name="BgEmail" type="string" export-name="BgEmail"/>
    </in-binding>
    <out-binding/>
    <position y="309.95454545454544" x="125.0"/>
  </workflow-item>
  <presentation>
    <p-step>
      <title><![CDATA[Server Post Deploy]]></title>
    </p-step>
    <p-param name="serverName">
      <desc><![CDATA[serverName]]></desc>
    </p-param>
    <p-param name="BgEmail">
      <desc><![CDATA[BgEmail]]></desc>
    </p-param>
  </presentation>
</workflow>