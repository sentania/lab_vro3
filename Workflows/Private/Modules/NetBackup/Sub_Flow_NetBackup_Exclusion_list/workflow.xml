<?xml version='1.0' encoding='UTF-8'?>
<workflow xmlns="http://vmware.com/vco/workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd" root-name="item1" object-name="workflow:name=generic" id="e29f1bd6-de49-400f-b64e-03d258ee7500" version="0.0.2" api-version="6.0.0" allowed-operations="vfe" restartMode="1" resumeFromFailedMode="0">
  <display-name><![CDATA[Sub_Flow_NetBackup_Exclusion_list]]></display-name>
  <position y="50.0" x="100.0"/>
  <input>
    <param name="Server_Name" type="string"/>
    <param name="Policy_Name" type="string"/>
    <param name="BGName" type="string"/>
    <param name="Req_name" type="string"/>
  </input>
  <attrib name="Key_Content" type="Array/string" read-only="false">
    <value encoded="n"><![CDATA[__NULL__]]></value>
  </attrib>
  <attrib name="Value_content" type="Array/string" read-only="false">
    <value encoded="n"><![CDATA[__NULL__]]></value>
  </attrib>
  <attrib name="MailContent" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <workflow-item name="item0" type="end" end-mode="0">
    <position y="45.40909090909091" x="524.5"/>
  </workflow-item>
  <workflow-item name="item1" out-name="item2" type="task">
    <display-name><![CDATA[Scriptable task]]></display-name>
    <script encoded="false"><![CDATA[System.log(Server_Name)
available = false
var VirtualMachinelist = VcPlugin.getAllVirtualMachines();
for each(Vmlist in VirtualMachinelist){
		if(Server_Name == Vmlist.name){
			System.log("Found Match")
			var VM = Vmlist
			}
	}
var fResult = false	
if(VM.guestOS == "Red Hat Enterprise Linux 7 (64-bit)" ){
			var session = new SSHSession(Server_Name, "ucpuser", "22");
			session.connectWithPasswordOrIdentity(false,"","/var/lib/vco/app-server/conf/vco_key");
			session.executeCommand("StrictHostKeyChecking=no cat /usr/openv/netbackup/bin/version", true)
			//session.executeCommand("StrictHostKeyChecking=no ls /usr/openv | grep -i netbackup", true)
			var opt = session.getOutput()
			System.log("Final Result - " + opt)
			//session.disconnect();
}
if(opt != ''){
		var extract = ''
		System.log("Netbackup Agent is installed on " + Server_Name + ", version installed is "+ opt)
		cmd = "StrictHostKeyChecking=no sudo curl https://nexus.nml.com/repository/raw-hosted/UCP/software/netbackup/exceptionfile/" + Policy_Name + " --output /usr/openv/netbackup/" + Policy_Name
		System.log(cmd + "  -  cmd")
		session.executeCommand(cmd, true)
		session.executeCommand("StrictHostKeyChecking=no ls /usr/openv/netbackup/ | grep exclude_list", true)
		var extract = session.getOutput()
		System.log("Extract Result - " + extract)
		if(extract == ''){
			MailContent = "Exception Not been applied"
		}else{
			MailContent = "Exception has been applied"
		}
	}else{
		MailContent = "Netbackup Agent has not been installed"
}
	i = 0
var d = new Date();
var fException_Date = d.getFullYear()  + "-" + (d.getMonth()+1) + "-" + d.getDate() + "T" + d.getHours() + ":" + d.getMinutes() + ":00";
System.log(fException_Date)
			
Key_Content = []
Value_content = []
var Key_Content = ["Policy", "Date_applied","Requestedby"];
var Value_content = [Policy_Name, fException_Date, Req_name ]

if(MailContent == "Exception has been applied"){
for ( i == 0; i < 3; i++){
	var workflowToLaunch = Server.getWorkflowWithId("1fa52ce3-f6c0-43f8-a28f-6790c2e93f13");
	if (workflowToLaunch == null) {
			throw "Workflow not found";
		}
	Key = 'unifiedcompute/servers/' + Server_Name +'/exceptions/Netbackup/' + Key_Content[i]
	Value = Value_content[i]
	System.log(Key  +  '  - Key to Update')
	System.log(Value  +  '  - value to Update')	
	var workflowParameters = new Properties();
	workflowParameters.put("key",Key);
	workflowParameters.put("value",Value);
	var wfToken = workflowToLaunch.execute(workflowParameters);
 }


}
	
	]]></script>
    <in-binding>
      <bind name="Server_Name" type="string" export-name="Server_Name"/>
      <bind name="Policy_Name" type="string" export-name="Policy_Name"/>
      <bind name="Req_name" type="string" export-name="Req_name"/>
    </in-binding>
    <out-binding>
      <bind name="Key_Content" type="Array/string" export-name="Key_Content"/>
      <bind name="Value_content" type="Array/string" export-name="Value_content"/>
      <bind name="MailContent" type="string" export-name="MailContent"/>
    </out-binding>
    <position y="55.40909090909091" x="204.5"/>
  </workflow-item>
  <workflow-item name="item2" out-name="item0" type="task">
    <display-name><![CDATA[Scriptable task]]></display-name>
    <script encoded="false"><![CDATA[function eMail(Content,serverName,Sub1, to){
	var objEmail = new EmailMessage();
	objEmail.fromAddress = 'DL-SDDC@northwesternmutual.com'
	objEmail.fromName = 'DL-SDDC@northwesternmutual.com'
	objEmail.smtpHost = 'mail.nml.com'
	objEmail.smtpPort = 25
 	objEmail.toAddress = to
	//objEmail.bccAddress = "DL-SDDC@northwesternmutual.com"
	objEmail.ccAddress = "IO-BACKUPTEAM-ENT@northwesternmutual.com"
	objEmail.subject = (Sub1)
	objEmail.addMimePart(Content,"text/html; charset=UTF-8")
	objEmail.sendMessage()
}

var BgList = Server.findAllForType("vCACCAFE:VCACHost")[0]
BgName = BGName
System.log(BGName + '  -  BUG GRP NAME ')
var App_EmailDL_query = vCACCAFEEntitiesFinder.findBusinessGroups(BgList,BGName)
System.log(App_EmailDL_query)
var Business_group = App_EmailDL_query[0].administratorEmail
System.log("Business Group Email ID - " + Business_group)
to = Business_group
System.log(Business_group)
var cap = false
switch(MailContent){
	case "Exception Not been applied":
		Sub1 = "NetBackup Exception Failed to applied for Server - "+ Server_Name 
		Content = "Unable to Apply Exception successfully, Please contact dl-sddc@northwesternmutual.com for futher information."
		//to = "dineshsolaiappan@northwesternmutual.com"
		eMail(Content,Server_Name,Sub1,to)
		var cap = true
	case "Netbackup Agent has not been installed":
		Sub1 = "NetBackup Exception Failed to applied for Server - "+ Server_Name + 'Agent Not Installed' 
		Content = "Unable to Apply Exception as Netbackup Agent is not installed,Please Install Netbackup Agent for Linux from vRA catalog Item or please contact dl-sddc@northwesternmutual.com for futher information."
		//to = "dineshsolaiappan@northwesternmutual.com"
		eMail(Content,Server_Name,Sub1,to)	
		var cap = true
	}
if(cap == false){
	var PublishDate = new Array();
	var getHosts = Server.findAllForType("REST:RESTOperation")
	for(var i =0; i < getHosts.length ; i++){
		if(getHosts[i].name == "Unified Compute etcd GET"){
			var R = getHosts[i]
				System.log("name - " + R.name)
			}
	
	}
	
	System.log(Server_Name + " - Backup Execption is being applied")
	content = "unifiedcompute/servers/" +Server_Name+ "/exceptions/Netbackup/"
	var inParamtersValues = [content];
	EtcdRestOperation = R
	var request = EtcdRestOperation.createRequest(inParamtersValues);
	//set the request content type
	request.contentType = "application\/json";
	System.log("Request: " + request);
	System.log("Request URL: " + request.fullUrl);
	var response = request.execute();
	//prepare output parameters
	System.log("Response: " + response);
	statusCode = response.statusCode;
	statusCodeAttribute = statusCode;
	System.log("Status code: " + statusCode);
	contentLength = response.contentLength;
	headers = response.getAllHeaders();
	contentAsString = response.contentAsString;
	System.log("Content as string: " + contentAsString);
	var currentStatus = JSON.parse(contentAsString)
	
	all_data = currentStatus.node.nodes
	
	for each(data in all_data){
		//System.log(data.key)
		if(data.key.match("Policy")){Policy_name = data.value}
		else if(data.key.match("Requestedby")){Requested_by = data.value}	
		else if(data.key.match("Date_applied")){Date_applied = data.value}	
		}
	
	if(statusCodeAttribute < 300){
			Content ='Team,'+'<br />' + '<br />' + 'NetBackup Exception Policy updated as below for the server '+  Server_Name+ ',' +'<br />' + '<br />' + "Policy_name : " + Policy_name +'<br />' + '<br />' + "Requested_by : " + Requested_by +'<br />' + '<br />' + "Date Effective From : " + Date_applied
			Sub1 = "NetBackup Exception Successfully applied for Server - "+ Server_Name 
		}
	
	//to = "dineshsolaiappan@northwesternmutual.com"
	eMail(Content,Server_Name,Sub1,to)
}	
]]></script>
    <in-binding>
      <bind name="Server_Name" type="string" export-name="Server_Name"/>
      <bind name="BGName" type="string" export-name="BGName"/>
      <bind name="MailContent" type="string" export-name="MailContent"/>
    </in-binding>
    <out-binding/>
    <position y="55.40909090909091" x="344.5"/>
  </workflow-item>
  <presentation>
    <p-param name="Server_Name">
      <desc><![CDATA[Server_Name]]></desc>
    </p-param>
    <p-param name="Policy_Name">
      <desc><![CDATA[Policy_Name]]></desc>
    </p-param>
    <p-param name="BGName">
      <desc><![CDATA[BGName]]></desc>
    </p-param>
    <p-param name="Req_name">
      <desc><![CDATA[Req_name]]></desc>
    </p-param>
  </presentation>
</workflow>