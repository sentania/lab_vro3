<?xml version='1.0' encoding='UTF-8'?>
<workflow xmlns="http://vmware.com/vco/workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd" root-name="item1" object-name="workflow:name=generic" id="d6c24c9c-4398-42c0-abaf-c9fbbbf31ca0" version="0.0.11" api-version="6.0.0" allowed-operations="evf" restartMode="1" resumeFromFailedMode="0">
  <display-name><![CDATA[Create Incident]]></display-name>
  <position y="55.0" x="105.0"/>
  <input>
    <param name="RequestedBy" type="string"/>
    <param name="Source" type="string"/>
    <param name="ShortDescription" type="string"/>
    <param name="Description" type="string"/>
    <param name="Service" type="string"/>
    <param name="Category" type="string"/>
    <param name="Subcategory" type="string"/>
    <param name="Impact" type="string"/>
    <param name="Urgency" type="string"/>
    <param name="Priority" type="string"/>
    <param name="OwnedByTeam" type="string"/>
    <param name="CustomerDisplayName" type="string"/>
    <param name="ConfigItemDisplayName" type="string"/>
    <param name="Server_Name" type="string"/>
    <param name="etcd_key" type="string"/>
  </input>
  <output>
    <param name="var" type="Array/CompositeType(statusCode:Number,contentLength:Number,headers:Properties,contentAsString:String)"/>
    <param name="Created_incident" type="string"/>
  </output>
  <attrib name="param" type="REST:RESTHost" read-only="false">
    <value encoded="n"><![CDATA[dunes://service.dunes.ch/CustomSDKObject?id='22e43fcf-7ed2-4485-9a7e-fe284a62381c'&dunesName='REST:RESTHost']]></value>
  </attrib>
  <attrib name="Key_Content" type="Array/string" read-only="false">
    <value encoded="n"><![CDATA[__NULL__]]></value>
  </attrib>
  <attrib name="Value_content" type="Array/string" read-only="false">
    <value encoded="n"><![CDATA[__NULL__]]></value>
  </attrib>
  <attrib name="Created_INC" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <workflow-item name="item0" type="end" end-mode="0">
    <position y="54.5" x="804.5"/>
  </workflow-item>
  <workflow-item name="item1" out-name="item3" type="task">
    <display-name><![CDATA[Scriptable task]]></display-name>
    <script encoded="false"><![CDATA[// Email function to notify
function eMail(Content,Sub1, bgpdl){
	var objEmail = new EmailMessage();
	objEmail.fromAddress = 'ucp-vro@nm.nmfco.com'
	objEmail.fromName = 'dl-sddc@northwesternmutual.com'
	objEmail.smtpHost = 'hera.nml.com'
	objEmail.smtpPort = 25
	objEmail.toAddress = 'dineshsolaiappan@northwesternmutual.com'//'dl-sddc@northwesternmutual.com'
	//objEmail.ccAddress = 'DL-SDDC@northwesternmutual.com'
	objEmail.subject = Sub1
	objEmail.addMimePart(Content,"text/html; charset=UTF-8")
	objEmail.sendMessage()
}

System.log(Server_Name + " - Server")
// Get todays date to update ETCD with INC details

INC_date =  new Date
//System.log(INC_date)
var s = new Date(INC_date).toLocaleDateString("en-US")
//System.log(s)
check = s.split(" ")[0]
//System.log(check)
var Month 
switch(check){
	case "December": 
		   Month = '12'
	       break;
	case "November": 
		   Month = '11'
	       break;
	case "October": 
		   Month = '10'
	       break;
	case "September": 
		   Month = '09'
	       break;
	case "August": 
		   Month = '08'
	       break;
	case "July": 
		   Month = '07'
	       break;
	case "June": 
		   Month = '06'
	       break;
	case "May": 
		   Month = '05'
	       break;
	case "April": 
		   Month = '04'
	       break;
	case "March": 
		   Month = '03'
	       break;
	case "February": 
		   Month = '02'
	       break;
	case "January": 
		   Month = '01'
	       break;
	}
Day = (s.split(" ")[1]).split(",")[0]
if(Day < 10){
		Day = 0 + Day
	}
Year = s.split(" ")[2]
tINC_Date = Year+Month+Day
//System.log(tINC_Date)

if( RequestedBy  == '' || RequestedBy == null){
		RequestedBy = "Dinesh Solaiappan"
		no_data = true
	}
if(Source == '' || Source == null){
		Source = "Event"
		no_data = true
		System.log("I have no Data for - " + Source)
	}
if(ShortDescription == '' || ShortDescription == null){
		ShortDescription = "Null"
		no_data = true
		System.log("I have no Data for - " + ShortDescription)
	}	
if(Description == "" || Description == null){
		Description = "Null"
		no_data = true
		System.log("I have no Data for - " + Description )
	}	
if(Service == "" || Service == null){
		Service = "Servers and Storage Service"
		no_data = true
		System.log("I have no Data for - " + Service)
    }
if(Category == "" || Category == null){
		Category = "UCP - Unified Compute Platform"
		no_data = true
		System.log("I have no Data for - " + Category)
	}
if(Subcategory == "" || Subcategory == null){
		Subcategory = "UCP Core Infra"
		no_data = true
		System.log("I have no Data for - " + Subcategory)
	}
if(Impact == "" || Impact == null){
		Impact = "Medium"
		no_data = true
		System.log("I have no Data for - " + Impact)
	}		
if(Urgency == "" || Urgency == null){
		Urgency = "High"
		no_data = true
		System.log("I have no Data for - " + Urgency)
	}
if(Priority == "" || Priority == null){
  		Priority = 3
		no_data = true
		System.log("I have no Data for - " + Priority)
	}	
if(OwnedByTeam == "" || OwnedByTeam == null){
		System.log("I dont have quene name")  
		//OwnedByTeam = "Enterprise Tech Command Center"
		OwnedByTeam = "UCP Unified Compute Platform"
		no_data = true
		System.log("I have no Data for - " + OwnedByTeam)
    }
if(CustomerDisplayName == "" || CustomerDisplayName == null){
		CustomerDisplayName = "Dinesh Solaiappan"
		no_data = true
		System.log("I have no Data for - " + CustomerDisplayName)
	}	
if(ConfigItemDisplayName == "" ||  ConfigItemDisplayName == null){
		ConfigItemDisplayName = "UCP Automation"
		no_data = true
		System.log("I have no Data for - " + ConfigItemDisplayName)
	}
	
//Creating pay load for Cherwell and triger an INC

json_Payload = '{"RequestedBy": "' + RequestedBy + '", "Source": "' + Source + '","ShortDescription": "' + ShortDescription + '","Description": "' + Description + '","Service": "' + Service + '","Category": "' + Category + '","Subcategory": "' + Subcategory + '","Impact": "' + Impact + '","Urgency": "' + Urgency + '","Priority": "' + Priority + '","OwnedByTeam": "' + OwnedByTeam + '","CustomerDisplayName": "' + CustomerDisplayName + '","ConfigItemDisplayName": "' + ConfigItemDisplayName + '"}'
System.log(json_Payload)
var suburl = "/incident" 
var Connection = param.createRequest('PUT',suburl,json_Payload)
System.log(suburl)
System.log(Connection)
Connection.contentType = "application/json"
try{
		var response = Connection.execute()
	}catch (ignore){
		System.log("Coould not create INC in first attempt")
	}
if(response.statusCode != 200){
		Content = "Unable create INC for Server " + Server_Name + ', Status Code is not 200. ' +'<br />' + '<br />' +" This can be due to incorrect charwell queue in etcd." + '<br />' + '<br />' + "Json Pay Load: " +'<br />' + '<br />'+ json_Payload + '<br />' + '<br />' + "Going to try and assign the Incident to UCP Team"
		Sub1 = "Unable to Create INC for Server - " + Server_Name
		bgpdl = "dl-sddc@northwesternmutual.com" 
		//bgpdl = "dineshsolaiappan@northwesternmutual.com" 
		eMail(Content,Sub1, bgpdl)
		//working on to assign INC to ETCC
		OwnedByTeam = "UCP Unified Compute Platform"
		json_Payload = '{"RequestedBy": "' + RequestedBy + '", "Source": "' + Source + '","ShortDescription": "' + ShortDescription + '","Description": "' + Description + '","Service": "' + Service + '","Category": "' + Category + '","Subcategory": "' + Subcategory + '","Impact": "' + Impact + '","Urgency": "' + Urgency + '","Priority": "' + Priority + '","OwnedByTeam": "' + OwnedByTeam + '","CustomerDisplayName": "' + CustomerDisplayName + '","ConfigItemDisplayName": "' + ConfigItemDisplayName + '"}'
		System.log(json_Payload)
		var Connection = param.createRequest('PUT',suburl,json_Payload)
		Connection.contentType = "application/json"
		try{
				var response = Connection.execute()
			}catch (ignore){
				System.log("Error, Unable to triger INC")
			}
}
System.log("INC Api Execution code - "+ response.statusCode)
var valueq = JSON.parse(response.contentAsString)
System.log("INC NUmber " + valueq['Incident ID'])
Created_INC = valueq['Incident ID']
Created_incident = valueq['Incident ID']
if(response.statusCode == 200){
	var Key_Content = [];
	var Value_content = [];
	var etcd_update = Server_Name.split(",")
	for each(etcd in etcd_update){
	System.log(etcd)
	//etcd_key = Destroy_INC should come from input
		Key_Content.push('unifiedcompute/servers/' + etcd +'/' + etcd_key )
		Value_content.push(encodeURI('INC' + valueq['Incident ID']))
	}
	System.log(Key_Content)
	System.log(Value_content)
}else{
	Content = "Unable create INC for Server " + Server_Name + ', Status Code is not 200 for the pay load, ' +'<br />' + '<br />'+ "Json Pay Load: " +'<br />' + '<br />'+ json_Payload + '<br />' + '<br />' + '<br />' + '<br />' + "Could not assign Incident to UCP Team, need manual check here."
	Sub1 = "Unable to Create INC for Server - " + Server_Name
	//bgpdl = "dineshsolaiappan@northwesternmutual.com" 
	eMail(Content,Sub1, bgpdl)
	System.log(JSON.parse(response.contentAsString))
	System.throw("No INC Created and Breaking Script here")
}

]]></script>
    <in-binding>
      <bind name="RequestedBy" type="string" export-name="RequestedBy"/>
      <bind name="Source" type="string" export-name="Source"/>
      <bind name="ShortDescription" type="string" export-name="ShortDescription"/>
      <bind name="Description" type="string" export-name="Description"/>
      <bind name="Service" type="string" export-name="Service"/>
      <bind name="Subcategory" type="string" export-name="Subcategory"/>
      <bind name="Impact" type="string" export-name="Impact"/>
      <bind name="Urgency" type="string" export-name="Urgency"/>
      <bind name="Priority" type="string" export-name="Priority"/>
      <bind name="OwnedByTeam" type="string" export-name="OwnedByTeam"/>
      <bind name="CustomerDisplayName" type="string" export-name="CustomerDisplayName"/>
      <bind name="ConfigItemDisplayName" type="string" export-name="ConfigItemDisplayName"/>
      <bind name="param" type="REST:RESTHost" export-name="param"/>
      <bind name="Server_Name" type="string" export-name="Server_Name"/>
      <bind name="Category" type="string" export-name="Category"/>
      <bind name="etcd_key" type="string" export-name="etcd_key"/>
    </in-binding>
    <out-binding>
      <bind name="Value_content" type="Array/string" export-name="Value_content"/>
      <bind name="Key_Content" type="Array/string" export-name="Key_Content"/>
      <bind name="Created_incident" type="string" export-name="Created_incident"/>
      <bind name="Created_INC" type="string"/>
    </out-binding>
    <position y="64.5" x="204.5"/>
  </workflow-item>
  <workflow-item name="item3" out-name="item0" type="foreach">
    <display-name><![CDATA[Foreach (etcd - Add Key)]]></display-name>
    <in-binding>
      <bind name="key" type="Array/string" export-name="*Key_Content">
        <description><![CDATA[etcd key to update]]></description>
      </bind>
      <bind name="value" type="Array/string" export-name="*Value_content">
        <description><![CDATA[value of the key]]></description>
      </bind>
    </in-binding>
    <out-binding>
      <bind name="statusCode" type="Array/Number" export-name="*var.statusCode"/>
      <bind name="contentLength" type="Array/Number" export-name="*var.contentLength"/>
      <bind name="headers" type="Array/Properties" export-name="*var.headers"/>
      <bind name="contentAsString" type="Array/String" export-name="*var.contentAsString"/>
    </out-binding>
    <reference type="Workflow" id="1fa52ce3-f6c0-43f8-a28f-6790c2e93f13"/>
    <description><![CDATA[Autogenerated workflow.]]></description>
    <position y="64.5" x="464.5"/>
  </workflow-item>
  <presentation>
    <p-param name="RequestedBy">
      <desc><![CDATA[RequestedBy]]></desc>
    </p-param>
    <p-param name="Source">
      <desc><![CDATA[Source]]></desc>
    </p-param>
    <p-param name="ShortDescription">
      <desc><![CDATA[ShortDescription]]></desc>
    </p-param>
    <p-param name="Description">
      <desc><![CDATA[Description]]></desc>
    </p-param>
    <p-param name="Service">
      <desc><![CDATA[Service]]></desc>
    </p-param>
    <p-param name="Category">
      <desc><![CDATA[Category]]></desc>
    </p-param>
    <p-param name="Subcategory">
      <desc><![CDATA[Subcategory]]></desc>
    </p-param>
    <p-param name="Impact">
      <desc><![CDATA[Impact]]></desc>
    </p-param>
    <p-param name="Urgency">
      <desc><![CDATA[Urgency]]></desc>
    </p-param>
    <p-param name="Priority">
      <desc><![CDATA[Priority]]></desc>
    </p-param>
    <p-param name="OwnedByTeam">
      <desc><![CDATA[OwnedByTeam]]></desc>
    </p-param>
    <p-param name="CustomerDisplayName">
      <desc><![CDATA[CustomerDisplayName]]></desc>
    </p-param>
    <p-param name="ConfigItemDisplayName">
      <desc><![CDATA[ConfigItemDisplayName]]></desc>
    </p-param>
    <p-param name="Server_Name">
      <desc><![CDATA[Server_Name]]></desc>
    </p-param>
    <p-param name="etcd_key">
      <desc><![CDATA[etcd_key]]></desc>
    </p-param>
  </presentation>
</workflow>