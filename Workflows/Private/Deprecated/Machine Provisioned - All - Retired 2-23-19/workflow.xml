<?xml version='1.0' encoding='UTF-8'?>
<workflow xmlns="http://vmware.com/vco/workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd" root-name="item3" object-name="workflow:name=generic" id="48e6ac80-3662-4eb5-86c9-29cc532070a3" version="0.1.4" api-version="6.0.0" allowed-operations="evf" restartMode="1" resumeFromFailedMode="0">
  <display-name><![CDATA[Machine Provisioned - All - Retired 2-23-19]]></display-name>
  <position y="50.0" x="100.0"/>
  <input>
    <param name="payload" type="Properties"/>
  </input>
  <output>
    <param name="virtualMachineAddOrUpdateProperties" type="Properties">
      <description><![CDATA[Updates to any of the vRA custom properties]]></description>
    </param>
    <param name="etcd_output" type="Array/CompositeType(statusCode:Number,contentLength:Number,headers:Properties,contentAsString:String)"/>
  </output>
  <attrib name="logPayload" type="boolean" read-only="false">
    <value encoded="n"><![CDATA[true]]></value>
    <description><![CDATA[Determines if the contents of the payload input will be logged]]></description>
  </attrib>
  <attrib name="vcVm" type="VC:VirtualMachine" read-only="false">
    <description><![CDATA[vCenter VM (null for BuildingMachine)]]></description>
  </attrib>
  <attrib name="vcacEntity" type="vCAC:Entity" read-only="false">
    <description><![CDATA[vCAC Entity object of the target VM]]></description>
  </attrib>
  <attrib name="vcacHost" type="vCAC:VCACHost" read-only="false">
    <description><![CDATA[IaaS Host of the target VM]]></description>
  </attrib>
  <attrib name="customProperties" type="Properties" read-only="false">
    <description><![CDATA[vRA Custom Properties of the target VM]]></description>
  </attrib>
  <attrib name="vcacVm" type="vCAC:VirtualMachine" read-only="false">
    <description><![CDATA[vCAC VM object ofthe target VM]]></description>
  </attrib>
  <attrib name="vmName" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
    <description><![CDATA[The name of the target VM in vRA and vCenter]]></description>
  </attrib>
  <attrib name="os" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
    <description><![CDATA[Operating System of the guest server]]></description>
  </attrib>
  <attrib name="localAdmin" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="cluster" type="VC:ClusterComputeResource" read-only="false">
    <description><![CDATA[Cluster compute resource]]></description>
  </attrib>
  <attrib name="vm_group" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
    <description><![CDATA[DRS Virtual machine group name]]></description>
  </attrib>
  <attrib name="vms" type="Array/VC:VirtualMachine" read-only="false">
    <description><![CDATA[A list of virtual machines]]></description>
  </attrib>
  <attrib name="stretched" type="boolean" read-only="false">
    <value encoded="n"><![CDATA[false]]></value>
    <description><![CDATA[Returns true or false based on the cluster the vcVM resides on. It will determine if a DRS VM group needs to be applied.]]></description>
  </attrib>
  <attrib name="dbas" type="string" read-only="false">
    <value encoded="n"><![CDATA[__NULL__]]></value>
  </attrib>
  <attrib name="dbname" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="dbadmin_username" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="environment" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="customAttributeName" type="string" read-only="false">
    <value encoded="n"><![CDATA[NBU_ENV]]></value>
    <description><![CDATA[A name for the custom attribute]]></description>
  </attrib>
  <attrib name="etcd_keys" type="Array/string" read-only="false">
    <value encoded="n"><![CDATA[__NULL__]]></value>
    <description><![CDATA[An array of keys to input into etcd]]></description>
  </attrib>
  <attrib name="etcd_values" type="Array/string" read-only="false">
    <value encoded="n"><![CDATA[__NULL__]]></value>
    <description><![CDATA[An array of values to populate to the etcd_keys]]></description>
  </attrib>
  <attrib name="dbms_type" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="businessGroup" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="contactPDL" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="serverOwner" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="bgCustomAttribute" type="string" read-only="false">
    <value encoded="n"><![CDATA[Business Group]]></value>
  </attrib>
  <attrib name="pdlCustomAttribute" type="string" read-only="false">
    <value encoded="n"><![CDATA[Business Group PDL]]></value>
  </attrib>
  <attrib name="envCustomAttribute" type="string" read-only="false">
    <value encoded="n"><![CDATA[Environment]]></value>
  </attrib>
  <workflow-item name="item0" type="end" end-mode="0">
    <position y="109.04545454545453" x="2084.5"/>
  </workflow-item>
  <workflow-item name="item2" out-name="item10" type="task">
    <display-name><![CDATA[Add/Update Props]]></display-name>
    <script encoded="false"><![CDATA[//Update or add any Custom Properties here
// Event Broker Workflow Subscription must be set to Blocking.  To change an existing 
// subscription from non-Blocking to Blocking, delete it and re-create it.

//Preserve any custom property additions from previous workflows in this LifeCycle state
var newProps = payload.get("virtualMachineAddOrUpdateProperties");
if (!newProps) {
	newProps = new Properties();
}

//Example custom property addition:
//newProps.put('VirtualMachine.Network0.Name', 'dvPortGroup');

virtualMachineAddOrUpdateProperties = newProps;]]></script>
    <in-binding>
      <bind name="payload" type="Properties" export-name="payload"/>
    </in-binding>
    <out-binding>
      <bind name="virtualMachineAddOrUpdateProperties" type="Properties" export-name="virtualMachineAddOrUpdateProperties">
        <description><![CDATA[Custom or system properties that were modified by the vRO workflow and returned to vRA]]></description>
      </bind>
    </out-binding>
    <position y="119.04545454545453" x="1204.5"/>
  </workflow-item>
  <workflow-item name="item1" out-name="item5" type="link" linked-workflow-id="b8a3f3e0-b05a-4d54-831c-94b2f02ce37a">
    <display-name><![CDATA[Get Lifecycle Objects]]></display-name>
    <in-binding>
      <bind name="payload" type="Properties" export-name="payload">
        <description><![CDATA[Input object from the vRA Event Subscription]]></description>
      </bind>
      <bind name="logPayload" type="boolean" export-name="logPayload">
        <description><![CDATA[Determines if the contents of the payload input will be logged]]></description>
      </bind>
    </in-binding>
    <out-binding>
      <bind name="vcVm" type="VC:VirtualMachine" export-name="vcVm">
        <description><![CDATA[vCenter VM (null for BuildingMachine)]]></description>
      </bind>
      <bind name="vcacEntity" type="vCAC:Entity" export-name="vcacEntity">
        <description><![CDATA[vCAC Entity object of the target VM]]></description>
      </bind>
      <bind name="vcacHost" type="vCAC:VCACHost" export-name="vcacHost">
        <description><![CDATA[IaaS Host of the target VM]]></description>
      </bind>
      <bind name="customProperties" type="Properties" export-name="customProperties">
        <description><![CDATA[vRA Custom Properties of the target VM]]></description>
      </bind>
      <bind name="vcacVm" type="vCAC:VirtualMachine" export-name="vcacVm">
        <description><![CDATA[vCAC VM object ofthe target VM]]></description>
      </bind>
      <bind name="vmName" type="string" export-name="vmName">
        <description><![CDATA[The name of the target VM in vRA and vCenter]]></description>
      </bind>
    </out-binding>
    <description><![CDATA[Uses the vRA 7 'payload' input to get most the vRA 6 workflow input objects,
such as the Custom Properties, vCenter VM, vCAC VM, etc.]]></description>
    <position y="55.40909090909091" x="344.5"/>
  </workflow-item>
  <workflow-item name="item3" prototype-id="system-log" out-name="item1" type="task" interaction="l">
    <display-name><![CDATA[Start WF]]></display-name>
    <script encoded="false"><![CDATA[//Auto-generated script
System.log("Starting 'Machine Provisioned - All' master workflow.");
]]></script>
    <in-binding/>
    <out-binding/>
    <description><![CDATA[Log the input text to the console log with level 'log']]></description>
    <position y="55.40909090909091" x="204.5"/>
  </workflow-item>
  <workflow-item name="item4" prototype-id="system-log" out-name="item0" type="task" interaction="l">
    <display-name><![CDATA[End WF]]></display-name>
    <script encoded="false"><![CDATA[//Auto-generated script
System.log("Ending 'Machine Provisioned - All' master workflow.");
]]></script>
    <in-binding/>
    <out-binding/>
    <description><![CDATA[Log the input text to the console log with level 'log']]></description>
    <position y="119.04545454545453" x="1904.5"/>
  </workflow-item>
  <workflow-item name="item5" out-name="item12" type="task">
    <display-name><![CDATA[Define Variables]]></display-name>
    <script encoded="false"><![CDATA[var os = customProperties.get("ucp.os");
var localAdmin = customProperties.get("ucp.local_administrators");
var location = customProperties.get("ucp.tag.location");
var environment = customProperties.get("ucp.tag.environment");
var businessGroup = customProperties.get("nm.ucp.BusinessGroupName");
var contactPDL = customProperties.get("nm.ucp.businessGroupPDL");
var cherwellValue = customProperties.get("nm.ucp.cherwellName");
var serverOwner = System.getContext().getParameter("__asd_requestedFor"); 
//The following variables are used for virtual machines provisioned from DBAS blueprints
var dbas = customProperties.get("ucp.dbas");
System.log('DBMS Type from vRA: ' + customProperties.get("ucp.dbas.dbms_type"));

var dbms_type = System.getModule("com.nm.ucp.dbas").getDBASParamFromFriendlyName(customProperties.get("ucp.dbas.dbms_type"));
System.log('DBMS Type from action: ' + dbms_type);
var dbname = customProperties.get("ucp.dbas.dbname");
var dbadmin_username = customProperties.get("ucp.dbas.dbadmin_username");


//end DBAS

// 1. DRS Affinity Group
// 1.1 Determine if the VM needs to be added to a DRS VM group.
var parent = vcVm.runtime.host;
while (parent !== null && ! (parent instanceof VcClusterComputeResource)) {
	parent = parent.parent;
}
var cluster = parent;
var stretched = false;

if(cluster.name.search("str") > -1) {
	stretched = true;
}

if(stretched == true) {
	// 1.2 Create array of VMs for adding to DRS VM Group
	var vms = [];
	vms.push(vcVm);

	// 1.3 Compile name of DRS Group based on location
	var vm_group = location+"-VMS";
	vm_group = vm_group.toUpperCase();
}

//We take all of the variables and work above and generate our etcd keys and values arrays.
var baseURL = 'unifiedcompute/servers/';  //the base URL for all UCP records in etcd
var serverURL = baseURL + vmName + '/';
var etcd_keys = [];
var etcd_values = [];
//all keys should should be in the form serverURL + key
//set all values immediately after
//this ensures their positions in the array match, which is how the add keys workflow expects it to be
//things will go royally sideways if you don't respect this

etcd_keys.push(serverURL + 'state');
etcd_values.push('needsProvisioning');

var d = new Date();
etcd_keys.push(serverURL + 'dateDeployed');
etcd_values.push(System.formatDate(d,'yyyMMdd-HHmm'));

etcd_keys.push(serverURL + 'serverOwner');
etcd_values.push(serverOwner)

//This keypush can be removed once the day2refactor branch is merged to prod
etcd_keys.push(serverURL + 'primaryGroup');
etcd_values.push(localAdmin);
//end deprecated section
var safelocalAdmin = localAdmin.replace(/_/i,'');
//populate data for requested admin group
var adminURL = serverURL + 'admins/' + safelocalAdmin + '/';
etcd_keys.push(adminURL + 'name');
etcd_values.push(localAdmin);

etcd_keys.push(adminURL + 'state');
etcd_values.push('grant');

etcd_keys.push(adminURL + 'addedOn');
etcd_values.push(System.formatDate(d,'yyyMMdd-HHmm'));

etcd_keys.push(adminURL + 'addedBy');
etcd_values.push(serverOwner)

etcd_keys.push(serverURL + 'cherwellName');
etcd_values.push(encodeURI(cherwellValue));
//end local admin data

//populate sudo data for Linux
if (os.search("Windows") > -1) {
	//Windows - do NOTHING
} else {
	var sudoSpecURL = serverURL + 'sudo/sudoSpecs/server_admins/';
	etcd_keys.push(sudoSpecURL + 'addedBy');
	etcd_values.push(serverOwner);  
	
	etcd_keys.push(sudoSpecURL + 'addedOn');
	etcd_values.push(System.formatDate(d,'yyyMMdd-HHmm'));
	
	etcd_keys.push(sudoSpecURL + 'state');
	etcd_values.push('grant');
	
	etcd_keys.push(sudoSpecURL + 'name');
	etcd_values.push('server_admins');
	
	adHostString = "adProd";
	var adElement = [];
		var ConfigElCategory = Server.getConfigurationElementCategoryWithPath("UCP");
		System.log(ConfigElCategory.name);
		var configEls = ConfigElCategory.allConfigurationElements;
		for(element in configEls) {
			if(configEls[element].name == "ActiveDirectory") {
			adElement = configEls[element];
			System.log("AD Elements: "+adElement.name);
			}
		}
	
	// 2.1.2 Get AD Host
		var adHost;
		if(adElement.getAttributeWithKey(adHostString) != null) {
			attribute = adElement.getAttributeWithKey(adHostString);
			adHost = attribute.value;
			System.log(adHost.name);
		}
	//we need to identify if this is a user or group so that sudo is happy
	
	var groupSearch = ActiveDirectory.search("UserGroup",localAdmin,adHost);
	System.log('Group search: ' + groupSearch);
	if (groupSearch.length > 0)
	{
		etcd_keys.push(sudoSpecURL + 'users/'+ safelocalAdmin +'/linuxName');
		etcd_values.push(encodeURI('%'+ localAdmin));  //Lookup linuxname if a group
	}
	else
	{
		etcd_keys.push(sudoSpecURL + 'users/'+ safelocalAdmin +'/linuxName');
		etcd_values.push(localAdmin);  //Lookup linuxname if a group
	}
	
	etcd_keys.push(sudoSpecURL + 'users/'+ safelocalAdmin +'/state');
	etcd_values.push('grant');  //Lookup linuxname if a group
	
	//Finally we define the users who we are manipulating
	etcd_keys.push(sudoSpecURL + 'users/'+ safelocalAdmin +'/name');
	etcd_values.push(localAdmin);
	
	etcd_keys.push(sudoSpecURL + 'users/'+ safelocalAdmin + '/addedOn');
	etcd_values.push(System.formatDate(d,'yyyMMdd-HHmm'));
	
	etcd_keys.push(sudoSpecURL + 'users/'+ safelocalAdmin + '/addedBy');
	etcd_values.push(serverOwner)

}
etcd_keys.push(serverURL + 'location');
etcd_values.push(location);

etcd_keys.push(serverURL + 'operatingSystem');
etcd_values.push(encodeURI(os));

etcd_keys.push(serverURL + 'environment');
etcd_values.push(customProperties.get("ucp.tag.environment"));

etcd_keys.push(serverURL + 'domain');
etcd_values.push(customProperties.get("ucp.domain"));

etcd_keys.push(serverURL + 'businessGroup');
etcd_values.push(encodeURI(customProperties.get("nm.ucp.BusinessGroupName")));

etcd_keys.push(serverURL + 'contactPDL');
etcd_values.push(customProperties.get("nm.ucp.businessGroupPDL"));

//yes this is redundant given that the server name is part of the URL, but it simpilfies making the VMname available to ansible

etcd_keys.push(serverURL + 'serverName');
etcd_values.push(vmName);

if (dbas == 'True')
{
	etcd_keys.push(serverURL + 'database/dbms_type');
	etcd_values.push(dbms_type);
	
	etcd_keys.push(serverURL + 'database/dbname');
	etcd_values.push(dbname);

	etcd_keys.push(serverURL + 'database/dbadmin_username');
	etcd_values.push(dbadmin_username);
}
]]></script>
    <in-binding>
      <bind name="customProperties" type="Properties" export-name="customProperties"/>
      <bind name="dbms_type" type="string" export-name="dbms_type"/>
      <bind name="etcd_keys" type="Array/string" export-name="etcd_keys">
        <description><![CDATA[An array of keys to input into etcd]]></description>
      </bind>
      <bind name="etcd_values" type="Array/string" export-name="etcd_values">
        <description><![CDATA[An array of values to populate to the etcd_keys]]></description>
      </bind>
      <bind name="vcVm" type="VC:VirtualMachine" export-name="vcVm"/>
      <bind name="vmName" type="string" export-name="vmName">
        <description><![CDATA[The name of the target VM in vRA and vCenter]]></description>
      </bind>
    </in-binding>
    <out-binding>
      <bind name="businessGroup" type="string" export-name="businessGroup"/>
      <bind name="cluster" type="VC:ClusterComputeResource" export-name="cluster"/>
      <bind name="contactPDL" type="string" export-name="contactPDL"/>
      <bind name="dbadmin_username" type="string" export-name="dbadmin_username"/>
      <bind name="dbas" type="string" export-name="dbas"/>
      <bind name="dbms_type" type="string" export-name="dbms_type"/>
      <bind name="dbname" type="string" export-name="dbname"/>
      <bind name="environment" type="string" export-name="environment"/>
      <bind name="etcd_keys" type="Array/string" export-name="etcd_keys">
        <description><![CDATA[An array of keys to input into etcd]]></description>
      </bind>
      <bind name="etcd_values" type="Array/string" export-name="etcd_values">
        <description><![CDATA[An array of values to populate to the etcd_keys]]></description>
      </bind>
      <bind name="localAdmin" type="string" export-name="localAdmin"/>
      <bind name="os" type="string" export-name="os"/>
      <bind name="serverOwner" type="string" export-name="serverOwner"/>
      <bind name="stretched" type="boolean" export-name="stretched"/>
      <bind name="vm_group" type="string" export-name="vm_group"/>
      <bind name="vms" type="Array/VC:VirtualMachine" export-name="vms"/>
    </out-binding>
    <position y="55.40909090909091" x="484.5"/>
  </workflow-item>
  <workflow-item name="item7" out-name="item6" type="link" linked-workflow-id="82808080808080808080808080808080F88980800131218696410919c1c1aef2e">
    <display-name><![CDATA[Add virtual machines to DRS group]]></display-name>
    <in-binding>
      <bind name="cluster" type="VC:ClusterComputeResource" export-name="cluster">
        <description><![CDATA[Cluster compute resource]]></description>
      </bind>
      <bind name="vm_group" type="string" export-name="vm_group">
        <description><![CDATA[DRS Virtual machine group name]]></description>
      </bind>
      <bind name="vms" type="Array/VC:VirtualMachine" export-name="vms">
        <description><![CDATA[A list of virtual machines]]></description>
      </bind>
    </in-binding>
    <out-binding/>
    <description><![CDATA[Adds a virtual machine list to an existing DRS virtual machine group.]]></description>
    <position y="119.04545454545453" x="764.5"/>
  </workflow-item>
  <workflow-item name="item8" out-name="item7" type="condition" alt-out-name="item6" comparator="0">
    <display-name><![CDATA[Stretched?]]></display-name>
    <script encoded="false"><![CDATA[//Generated by the system, cannot be edited
return (stretched == true) ;]]></script>
    <in-binding>
      <bind name="stretched" type="boolean" export-name="stretched"/>
    </in-binding>
    <condition name="stretched" type="boolean" comparator="0" label="null">false</condition>
    <position y="45.40909090909091" x="764.5"/>
  </workflow-item>
  <workflow-item name="item9" out-name="item2" type="custom-condition" alt-out-name="item11">
    <display-name><![CDATA[Is DBAS?]]></display-name>
    <script encoded="false"><![CDATA[if (dbas == "True") {
	return false
}
else {
	return true
}
]]></script>
    <in-binding>
      <bind name="dbas" type="string" export-name="dbas"/>
    </in-binding>
    <position y="45.40909090909091" x="1064.5"/>
  </workflow-item>
  <workflow-item name="item11" out-name="item2" type="link" linked-workflow-id="61a812b4-625b-4364-ba6d-1f4dc0ca1e2d">
    <display-name><![CDATA[DBAS Deploy and Check Status]]></display-name>
    <in-binding>
      <bind name="serverName" type="string" export-name="vmName">
        <description><![CDATA[Server name to apply the post deploy configuration]]></description>
      </bind>
      <bind name="dbas" type="string" export-name="dbas"/>
      <bind name="dbname" type="string" export-name="dbname"/>
      <bind name="dbadmin_username" type="string" export-name="dbadmin_username"/>
      <bind name="environment" type="string" export-name="environment"/>
      <bind name="dbms_type" type="string" export-name="dbms_type"/>
      <bind name="serverOwner" type="string" export-name="serverOwner"/>
      <bind name="contactPDL" type="string" export-name="contactPDL"/>
      <bind name="businessGroup" type="string" export-name="businessGroup"/>
    </in-binding>
    <out-binding/>
    <position y="182.68181818181816" x="1064.5"/>
  </workflow-item>
  <workflow-item name="item10" out-name="item13" type="link" linked-workflow-id="A9808080808080808080808080808080BE80808001231146624761b79546544c2">
    <display-name><![CDATA[Add custom attribute for backup env]]></display-name>
    <in-binding>
      <bind name="vm" type="VC:VirtualMachine" export-name="vcVm">
        <description><![CDATA[The virtual machine to which to add a custom attribute]]></description>
      </bind>
      <bind name="customAttributeName" type="string" export-name="customAttributeName">
        <description><![CDATA[A name for the custom attribute]]></description>
      </bind>
      <bind name="newValue" type="string" export-name="environment">
        <description><![CDATA[A value for the custom attribute]]></description>
      </bind>
    </in-binding>
    <out-binding/>
    <description><![CDATA[Adds a custom attribute to a virtual machine.]]></description>
    <position y="119.04545454545453" x="1344.5"/>
  </workflow-item>
  <workflow-item name="item12" out-name="item8" type="foreach">
    <display-name><![CDATA[Foreach (etcd - Add Key)]]></display-name>
    <in-binding>
      <bind name="key" type="Array/string" export-name="*etcd_keys">
        <description><![CDATA[etcd key to update]]></description>
      </bind>
      <bind name="value" type="Array/string" export-name="*etcd_values">
        <description><![CDATA[value of the key]]></description>
      </bind>
    </in-binding>
    <out-binding>
      <bind name="statusCode" type="Array/Number" export-name="*etcd_output.statusCode"/>
      <bind name="contentLength" type="Array/Number" export-name="*etcd_output.contentLength"/>
      <bind name="headers" type="Array/Properties" export-name="*etcd_output.headers"/>
      <bind name="contentAsString" type="Array/String" export-name="*etcd_output.contentAsString"/>
    </out-binding>
    <reference type="Workflow" id="1fa52ce3-f6c0-43f8-a28f-6790c2e93f13"/>
    <description><![CDATA[Autogenerated workflow.]]></description>
    <position y="55.90909090909091" x="625.0"/>
  </workflow-item>
  <workflow-item name="item6" out-name="item9" type="link" linked-workflow-id="558c7db8-6dd1-4af0-b446-b2eab044e733">
    <display-name><![CDATA[Server Post Deploy and Check Status (etcd)]]></display-name>
    <in-binding>
      <bind name="serverName" type="string" export-name="vmName"/>
    </in-binding>
    <out-binding/>
    <position y="55.90909090909091" x="925.0"/>
  </workflow-item>
  <workflow-item name="item13" out-name="item14" type="link" linked-workflow-id="A9808080808080808080808080808080BE80808001231146624761b79546544c2">
    <display-name><![CDATA[Add custom attribute for business group]]></display-name>
    <in-binding>
      <bind name="vm" type="VC:VirtualMachine" export-name="vcVm">
        <description><![CDATA[The virtual machine to which to add a custom attribute]]></description>
      </bind>
      <bind name="customAttributeName" type="string" export-name="bgCustomAttribute">
        <description><![CDATA[A name for the custom attribute]]></description>
      </bind>
      <bind name="newValue" type="string" export-name="businessGroup">
        <description><![CDATA[A value for the custom attribute]]></description>
      </bind>
    </in-binding>
    <out-binding/>
    <description><![CDATA[Adds a custom attribute to a virtual machine.]]></description>
    <position y="119.04545454545453" x="1484.5"/>
  </workflow-item>
  <workflow-item name="item14" out-name="item15" type="link" linked-workflow-id="A9808080808080808080808080808080BE80808001231146624761b79546544c2">
    <display-name><![CDATA[Add custom attribute for business group pdl]]></display-name>
    <in-binding>
      <bind name="vm" type="VC:VirtualMachine" export-name="vcVm">
        <description><![CDATA[The virtual machine to which to add a custom attribute]]></description>
      </bind>
      <bind name="customAttributeName" type="string" export-name="pdlCustomAttribute">
        <description><![CDATA[A name for the custom attribute]]></description>
      </bind>
      <bind name="newValue" type="string" export-name="contactPDL">
        <description><![CDATA[A value for the custom attribute]]></description>
      </bind>
    </in-binding>
    <out-binding/>
    <description><![CDATA[Adds a custom attribute to a virtual machine.]]></description>
    <position y="119.04545454545453" x="1624.5"/>
  </workflow-item>
  <workflow-item name="item15" out-name="item4" type="link" linked-workflow-id="A9808080808080808080808080808080BE80808001231146624761b79546544c2">
    <display-name><![CDATA[Add custom attribute environment]]></display-name>
    <in-binding>
      <bind name="vm" type="VC:VirtualMachine" export-name="vcVm">
        <description><![CDATA[The virtual machine to which to add a custom attribute]]></description>
      </bind>
      <bind name="customAttributeName" type="string" export-name="envCustomAttribute">
        <description><![CDATA[A name for the custom attribute]]></description>
      </bind>
      <bind name="newValue" type="string" export-name="environment">
        <description><![CDATA[A value for the custom attribute]]></description>
      </bind>
    </in-binding>
    <out-binding/>
    <description><![CDATA[Adds a custom attribute to a virtual machine.]]></description>
    <position y="119.04545454545453" x="1764.5"/>
  </workflow-item>
  <presentation>
    <p-param name="payload">
      <desc><![CDATA[payload]]></desc>
    </p-param>
  </presentation>
</workflow>